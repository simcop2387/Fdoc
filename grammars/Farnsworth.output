Conflicts:
----------
Conflict in state 38 between rule 100 and token '-' resolved as reduce.
Conflict in state 38 between rule 100 and token 'conforms' resolved as reduce.
Conflict in state 38 between rule 100 and token '*=' resolved as reduce.
Conflict in state 38 between rule 100 and token '<' resolved as reduce.
Conflict in state 38 between rule 100 and token '%' resolved as reduce.
Conflict in state 38 between rule 100 and token '==' resolved as reduce.
Conflict in state 38 between rule 100 and token '>=' resolved as reduce.
Conflict in state 38 between rule 100 and token ' ' resolved as reduce.
Conflict in state 38 between rule 100 and token '*' resolved as reduce.
Conflict in state 38 between rule 100 and token '**=' resolved as reduce.
Conflict in state 38 between rule 100 and token '||' resolved as reduce.
Conflict in state 38 between rule 100 and token '->' resolved as reduce.
Conflict in state 38 between rule 100 and token '-=' resolved as reduce.
Conflict in state 38 between rule 100 and token '/=' resolved as reduce.
Conflict in state 38 between rule 100 and token '<=' resolved as reduce.
Conflict in state 38 between rule 100 and token '%=' resolved as reduce.
Conflict in state 38 between rule 100 and token '>' resolved as reduce.
Conflict in state 38 between rule 100 and token '^=' resolved as reduce.
Conflict in state 38 between rule 100 and token '+' resolved as reduce.
Conflict in state 38 between rule 100 and token '**' resolved as shift.
Conflict in state 38 between rule 100 and token '^' resolved as shift.
Conflict in state 38 between rule 100 and token 'per' resolved as reduce.
Conflict in state 38 between rule 100 and token '!=' resolved as reduce.
Conflict in state 38 between rule 100 and token '?' resolved as reduce.
Conflict in state 38 between rule 100 and token '&&' resolved as reduce.
Conflict in state 38 between rule 100 and token '^^' resolved as reduce.
Conflict in state 38 between rule 100 and token '/' resolved as reduce.
Conflict in state 38 between rule 100 and token '+=' resolved as reduce.
Conflict in state 38 between rule 100 and token '=' resolved as reduce.
Conflict in state 38 between rule 100 and token '<=>' resolved as reduce.
Conflict in state 57 between rule 59 and token '-' resolved as reduce.
Conflict in state 114 between rule 60 and token '-' resolved as reduce.
Conflict in state 114 between rule 60 and token 'conforms' resolved as reduce.
Conflict in state 114 between rule 60 and token '*=' resolved as reduce.
Conflict in state 114 between rule 60 and token '<' resolved as reduce.
Conflict in state 114 between rule 60 and token '%' resolved as reduce.
Conflict in state 114 between rule 60 and token '==' resolved as reduce.
Conflict in state 114 between rule 60 and token '>=' resolved as reduce.
Conflict in state 114 between rule 60 and token ' ' resolved as reduce.
Conflict in state 114 between rule 60 and token '*' resolved as reduce.
Conflict in state 114 between rule 60 and token '**=' resolved as reduce.
Conflict in state 114 between rule 60 and token '||' resolved as reduce.
Conflict in state 114 between rule 60 and token '->' resolved as reduce.
Conflict in state 114 between rule 60 and token '-=' resolved as reduce.
Conflict in state 114 between rule 60 and token '/=' resolved as reduce.
Conflict in state 114 between rule 60 and token '<=' resolved as reduce.
Conflict in state 114 between rule 60 and token '%=' resolved as reduce.
Conflict in state 114 between rule 60 and token '>' resolved as reduce.
Conflict in state 114 between rule 60 and token '^=' resolved as reduce.
Conflict in state 114 between rule 60 and token '+' resolved as reduce.
Conflict in state 114 between rule 60 and token '**' resolved as shift.
Conflict in state 114 between rule 60 and token '^' resolved as shift.
Conflict in state 114 between rule 60 and token 'per' resolved as reduce.
Conflict in state 114 between rule 60 and token '!=' resolved as reduce.
Conflict in state 114 between rule 60 and token '?' resolved as reduce.
Conflict in state 114 between rule 60 and token '&&' resolved as reduce.
Conflict in state 114 between rule 60 and token '^^' resolved as reduce.
Conflict in state 114 between rule 60 and token '/' resolved as reduce.
Conflict in state 114 between rule 60 and token '+=' resolved as reduce.
Conflict in state 114 between rule 60 and token '=' resolved as reduce.
Conflict in state 114 between rule 60 and token '<=>' resolved as reduce.
Conflict in state 116 between rule 80 and token '-' resolved as reduce.
Conflict in state 116 between rule 80 and token 'conforms' resolved as reduce.
Conflict in state 116 between rule 80 and token '*=' resolved as reduce.
Conflict in state 116 between rule 80 and token '<' resolved as reduce.
Conflict in state 116 between rule 80 and token '%' resolved as shift.
Conflict in state 116 between rule 80 and token '==' resolved as reduce.
Conflict in state 116 between rule 80 and token '>=' resolved as reduce.
Conflict in state 116 between rule 80 and token ' ' resolved as shift.
Conflict in state 116 between rule 80 and token '*' resolved as shift.
Conflict in state 116 between rule 80 and token '**=' resolved as reduce.
Conflict in state 116 between rule 80 and token '||' resolved as reduce.
Conflict in state 116 between rule 80 and token '->' resolved as reduce.
Conflict in state 116 between rule 80 and token '-=' resolved as reduce.
Conflict in state 116 between rule 80 and token '/=' resolved as reduce.
Conflict in state 116 between rule 80 and token '<=' resolved as reduce.
Conflict in state 116 between rule 80 and token '%=' resolved as reduce.
Conflict in state 116 between rule 80 and token '>' resolved as reduce.
Conflict in state 116 between rule 80 and token '^=' resolved as reduce.
Conflict in state 116 between rule 80 and token '+' resolved as reduce.
Conflict in state 116 between rule 80 and token '**' resolved as shift.
Conflict in state 116 between rule 80 and token '^' resolved as shift.
Conflict in state 116 between rule 80 and token 'per' resolved as shift.
Conflict in state 116 between rule 80 and token '!=' resolved as reduce.
Conflict in state 116 between rule 80 and token '?' resolved as reduce.
Conflict in state 116 between rule 80 and token '&&' resolved as reduce.
Conflict in state 116 between rule 80 and token '^^' resolved as reduce.
Conflict in state 116 between rule 80 and token '/' resolved as shift.
Conflict in state 116 between rule 80 and token '+=' resolved as reduce.
Conflict in state 116 between rule 80 and token '=' resolved as reduce.
Conflict in state 116 between rule 80 and token '<=>' resolved as reduce.
Conflict in state 117 between rule 88 and token '-' resolved as shift.
Conflict in state 117 between rule 88 and token 'conforms' resolved as reduce.
Conflict in state 117 between rule 88 and token '*=' resolved as reduce.
Conflict in state 117 between rule 88 and token '<' resolved as shift.
Conflict in state 117 between rule 88 and token '%' resolved as shift.
Conflict in state 117 between rule 88 and token '==' resolved as shift.
Conflict in state 117 between rule 88 and token '>=' resolved as shift.
Conflict in state 117 between rule 88 and token ' ' resolved as shift.
Conflict in state 117 between rule 88 and token '*' resolved as shift.
Conflict in state 117 between rule 88 and token '**=' resolved as reduce.
Conflict in state 117 between rule 88 and token '||' resolved as reduce.
Conflict in state 117 between rule 88 and token '->' resolved as reduce.
Conflict in state 117 between rule 88 and token '-=' resolved as reduce.
Conflict in state 117 between rule 88 and token '/=' resolved as reduce.
Conflict in state 117 between rule 88 and token '<=' resolved as shift.
Conflict in state 117 between rule 88 and token '%=' resolved as reduce.
Conflict in state 117 between rule 88 and token '>' resolved as shift.
Conflict in state 117 between rule 88 and token '^=' resolved as reduce.
Conflict in state 117 between rule 88 and token '+' resolved as shift.
Conflict in state 117 between rule 88 and token '**' resolved as shift.
Conflict in state 117 between rule 88 and token '^' resolved as shift.
Conflict in state 117 between rule 88 and token 'per' resolved as shift.
Conflict in state 117 between rule 88 and token '!=' resolved as shift.
Conflict in state 117 between rule 88 and token '?' resolved as reduce.
Conflict in state 117 between rule 88 and token '&&' resolved as reduce.
Conflict in state 117 between rule 88 and token '^^' resolved as reduce.
Conflict in state 117 between rule 88 and token '/' resolved as shift.
Conflict in state 117 between rule 88 and token '+=' resolved as reduce.
Conflict in state 117 between rule 88 and token '=' resolved as reduce.
Conflict in state 117 between rule 88 and token '<=>' resolved as shift.
Conflict in state 118 between rule 66 and token '-' resolved as shift.
Conflict in state 118 between rule 66 and token 'conforms' resolved as reduce.
Conflict in state 118 between rule 66 and token '*=' resolved as reduce.
Conflict in state 118 between rule 66 and token '<' resolved as error.
Conflict in state 118 between rule 66 and token '%' resolved as shift.
Conflict in state 118 between rule 66 and token '==' resolved as error.
Conflict in state 118 between rule 66 and token '>=' resolved as error.
Conflict in state 118 between rule 66 and token ' ' resolved as shift.
Conflict in state 118 between rule 66 and token '*' resolved as shift.
Conflict in state 118 between rule 66 and token '**=' resolved as reduce.
Conflict in state 118 between rule 66 and token '||' resolved as reduce.
Conflict in state 118 between rule 66 and token '->' resolved as reduce.
Conflict in state 118 between rule 66 and token '-=' resolved as reduce.
Conflict in state 118 between rule 66 and token '/=' resolved as reduce.
Conflict in state 118 between rule 66 and token '<=' resolved as error.
Conflict in state 118 between rule 66 and token '%=' resolved as reduce.
Conflict in state 118 between rule 66 and token '>' resolved as error.
Conflict in state 118 between rule 66 and token '^=' resolved as reduce.
Conflict in state 118 between rule 66 and token '+' resolved as shift.
Conflict in state 118 between rule 66 and token '**' resolved as shift.
Conflict in state 118 between rule 66 and token '^' resolved as shift.
Conflict in state 118 between rule 66 and token 'per' resolved as shift.
Conflict in state 118 between rule 66 and token '!=' resolved as error.
Conflict in state 118 between rule 66 and token '?' resolved as reduce.
Conflict in state 118 between rule 66 and token '&&' resolved as reduce.
Conflict in state 118 between rule 66 and token '^^' resolved as reduce.
Conflict in state 118 between rule 66 and token '/' resolved as shift.
Conflict in state 118 between rule 66 and token '+=' resolved as reduce.
Conflict in state 118 between rule 66 and token '=' resolved as reduce.
Conflict in state 118 between rule 66 and token '<=>' resolved as error.
Conflict in state 119 between rule 50 and token '-' resolved as shift.
Conflict in state 119 between rule 50 and token 'conforms' resolved as shift.
Conflict in state 119 between rule 50 and token '*=' resolved as shift.
Conflict in state 119 between rule 50 and token '<' resolved as shift.
Conflict in state 119 between rule 50 and token '%' resolved as shift.
Conflict in state 119 between rule 50 and token '==' resolved as shift.
Conflict in state 119 between rule 50 and token '>=' resolved as shift.
Conflict in state 119 between rule 50 and token ' ' resolved as shift.
Conflict in state 119 between rule 50 and token '*' resolved as shift.
Conflict in state 119 between rule 50 and token '**=' resolved as shift.
Conflict in state 119 between rule 50 and token '||' resolved as shift.
Conflict in state 119 between rule 50 and token '->' resolved as shift.
Conflict in state 119 between rule 50 and token '-=' resolved as shift.
Conflict in state 119 between rule 50 and token '/=' resolved as shift.
Conflict in state 119 between rule 50 and token '<=' resolved as shift.
Conflict in state 119 between rule 50 and token '%=' resolved as shift.
Conflict in state 119 between rule 50 and token '>' resolved as shift.
Conflict in state 119 between rule 50 and token '^=' resolved as shift.
Conflict in state 119 between rule 50 and token '+' resolved as shift.
Conflict in state 119 between rule 50 and token '**' resolved as shift.
Conflict in state 119 between rule 50 and token '^' resolved as shift.
Conflict in state 119 between rule 50 and token 'per' resolved as shift.
Conflict in state 119 between rule 50 and token '!=' resolved as shift.
Conflict in state 119 between rule 50 and token '?' resolved as shift.
Conflict in state 119 between rule 50 and token '&&' resolved as shift.
Conflict in state 119 between rule 50 and token '^^' resolved as shift.
Conflict in state 119 between rule 50 and token '/' resolved as shift.
Conflict in state 119 between rule 50 and token '+=' resolved as shift.
Conflict in state 119 between rule 50 and token '=' resolved as shift.
Conflict in state 119 between rule 50 and token '<=>' resolved as shift.
Conflict in state 120 between rule 83 and token '-' resolved as reduce.
Conflict in state 120 between rule 83 and token 'conforms' resolved as reduce.
Conflict in state 120 between rule 83 and token '*=' resolved as reduce.
Conflict in state 120 between rule 83 and token '<' resolved as reduce.
Conflict in state 120 between rule 83 and token '%' resolved as reduce.
Conflict in state 120 between rule 83 and token '==' resolved as reduce.
Conflict in state 120 between rule 83 and token '>=' resolved as reduce.
Conflict in state 120 between rule 83 and token ' ' resolved as reduce.
Conflict in state 120 between rule 83 and token '*' resolved as reduce.
Conflict in state 120 between rule 83 and token '**=' resolved as reduce.
Conflict in state 120 between rule 83 and token '||' resolved as reduce.
Conflict in state 120 between rule 83 and token '->' resolved as reduce.
Conflict in state 120 between rule 83 and token '-=' resolved as reduce.
Conflict in state 120 between rule 83 and token '/=' resolved as reduce.
Conflict in state 120 between rule 83 and token '<=' resolved as reduce.
Conflict in state 120 between rule 83 and token '%=' resolved as reduce.
Conflict in state 120 between rule 83 and token '>' resolved as reduce.
Conflict in state 120 between rule 83 and token '^=' resolved as reduce.
Conflict in state 120 between rule 83 and token '+' resolved as reduce.
Conflict in state 120 between rule 83 and token '**' resolved as shift.
Conflict in state 120 between rule 83 and token '^' resolved as shift.
Conflict in state 120 between rule 83 and token 'per' resolved as reduce.
Conflict in state 120 between rule 83 and token '!=' resolved as reduce.
Conflict in state 120 between rule 83 and token '?' resolved as reduce.
Conflict in state 120 between rule 83 and token '&&' resolved as reduce.
Conflict in state 120 between rule 83 and token '^^' resolved as reduce.
Conflict in state 120 between rule 83 and token '/' resolved as reduce.
Conflict in state 120 between rule 83 and token '+=' resolved as reduce.
Conflict in state 120 between rule 83 and token '=' resolved as reduce.
Conflict in state 120 between rule 83 and token '<=>' resolved as reduce.
Conflict in state 121 between rule 70 and token '-' resolved as shift.
Conflict in state 121 between rule 70 and token 'conforms' resolved as reduce.
Conflict in state 121 between rule 70 and token '*=' resolved as reduce.
Conflict in state 121 between rule 70 and token '<' resolved as error.
Conflict in state 121 between rule 70 and token '%' resolved as shift.
Conflict in state 121 between rule 70 and token '==' resolved as error.
Conflict in state 121 between rule 70 and token '>=' resolved as error.
Conflict in state 121 between rule 70 and token ' ' resolved as shift.
Conflict in state 121 between rule 70 and token '*' resolved as shift.
Conflict in state 121 between rule 70 and token '**=' resolved as reduce.
Conflict in state 121 between rule 70 and token '||' resolved as reduce.
Conflict in state 121 between rule 70 and token '->' resolved as reduce.
Conflict in state 121 between rule 70 and token '-=' resolved as reduce.
Conflict in state 121 between rule 70 and token '/=' resolved as reduce.
Conflict in state 121 between rule 70 and token '<=' resolved as error.
Conflict in state 121 between rule 70 and token '%=' resolved as reduce.
Conflict in state 121 between rule 70 and token '>' resolved as error.
Conflict in state 121 between rule 70 and token '^=' resolved as reduce.
Conflict in state 121 between rule 70 and token '+' resolved as shift.
Conflict in state 121 between rule 70 and token '**' resolved as shift.
Conflict in state 121 between rule 70 and token '^' resolved as shift.
Conflict in state 121 between rule 70 and token 'per' resolved as shift.
Conflict in state 121 between rule 70 and token '!=' resolved as error.
Conflict in state 121 between rule 70 and token '?' resolved as reduce.
Conflict in state 121 between rule 70 and token '&&' resolved as reduce.
Conflict in state 121 between rule 70 and token '^^' resolved as reduce.
Conflict in state 121 between rule 70 and token '/' resolved as shift.
Conflict in state 121 between rule 70 and token '+=' resolved as reduce.
Conflict in state 121 between rule 70 and token '=' resolved as reduce.
Conflict in state 121 between rule 70 and token '<=>' resolved as error.
Conflict in state 122 between rule 69 and token '-' resolved as shift.
Conflict in state 122 between rule 69 and token 'conforms' resolved as reduce.
Conflict in state 122 between rule 69 and token '*=' resolved as reduce.
Conflict in state 122 between rule 69 and token '<' resolved as error.
Conflict in state 122 between rule 69 and token '%' resolved as shift.
Conflict in state 122 between rule 69 and token '==' resolved as error.
Conflict in state 122 between rule 69 and token '>=' resolved as error.
Conflict in state 122 between rule 69 and token ' ' resolved as shift.
Conflict in state 122 between rule 69 and token '*' resolved as shift.
Conflict in state 122 between rule 69 and token '**=' resolved as reduce.
Conflict in state 122 between rule 69 and token '||' resolved as reduce.
Conflict in state 122 between rule 69 and token '->' resolved as reduce.
Conflict in state 122 between rule 69 and token '-=' resolved as reduce.
Conflict in state 122 between rule 69 and token '/=' resolved as reduce.
Conflict in state 122 between rule 69 and token '<=' resolved as error.
Conflict in state 122 between rule 69 and token '%=' resolved as reduce.
Conflict in state 122 between rule 69 and token '>' resolved as error.
Conflict in state 122 between rule 69 and token '^=' resolved as reduce.
Conflict in state 122 between rule 69 and token '+' resolved as shift.
Conflict in state 122 between rule 69 and token '**' resolved as shift.
Conflict in state 122 between rule 69 and token '^' resolved as shift.
Conflict in state 122 between rule 69 and token 'per' resolved as shift.
Conflict in state 122 between rule 69 and token '!=' resolved as error.
Conflict in state 122 between rule 69 and token '?' resolved as reduce.
Conflict in state 122 between rule 69 and token '&&' resolved as reduce.
Conflict in state 122 between rule 69 and token '^^' resolved as reduce.
Conflict in state 122 between rule 69 and token '/' resolved as shift.
Conflict in state 122 between rule 69 and token '+=' resolved as reduce.
Conflict in state 122 between rule 69 and token '=' resolved as reduce.
Conflict in state 122 between rule 69 and token '<=>' resolved as error.
Conflict in state 123 between rule 61 and token '-' resolved as reduce.
Conflict in state 123 between rule 61 and token 'conforms' resolved as reduce.
Conflict in state 123 between rule 61 and token '*=' resolved as reduce.
Conflict in state 123 between rule 61 and token '<' resolved as reduce.
Conflict in state 123 between rule 61 and token '%' resolved as reduce.
Conflict in state 123 between rule 61 and token '==' resolved as reduce.
Conflict in state 123 between rule 61 and token '>=' resolved as reduce.
Conflict in state 123 between rule 61 and token ' ' resolved as reduce.
Conflict in state 123 between rule 61 and token '*' resolved as reduce.
Conflict in state 123 between rule 61 and token '**=' resolved as reduce.
Conflict in state 123 between rule 61 and token '||' resolved as reduce.
Conflict in state 123 between rule 61 and token '->' resolved as reduce.
Conflict in state 123 between rule 61 and token '-=' resolved as reduce.
Conflict in state 123 between rule 61 and token '/=' resolved as reduce.
Conflict in state 123 between rule 61 and token '<=' resolved as reduce.
Conflict in state 123 between rule 61 and token '%=' resolved as reduce.
Conflict in state 123 between rule 61 and token '>' resolved as reduce.
Conflict in state 123 between rule 61 and token '^=' resolved as reduce.
Conflict in state 123 between rule 61 and token '+' resolved as reduce.
Conflict in state 123 between rule 61 and token '**' resolved as shift.
Conflict in state 123 between rule 61 and token '^' resolved as shift.
Conflict in state 123 between rule 61 and token 'per' resolved as reduce.
Conflict in state 123 between rule 61 and token '!=' resolved as reduce.
Conflict in state 123 between rule 61 and token '?' resolved as reduce.
Conflict in state 123 between rule 61 and token '&&' resolved as reduce.
Conflict in state 123 between rule 61 and token '^^' resolved as reduce.
Conflict in state 123 between rule 61 and token '/' resolved as reduce.
Conflict in state 123 between rule 61 and token '+=' resolved as reduce.
Conflict in state 123 between rule 61 and token '=' resolved as reduce.
Conflict in state 123 between rule 61 and token '<=>' resolved as reduce.
Conflict in state 124 between rule 58 and token '-' resolved as reduce.
Conflict in state 124 between rule 58 and token 'conforms' resolved as reduce.
Conflict in state 124 between rule 58 and token '*=' resolved as reduce.
Conflict in state 124 between rule 58 and token '<' resolved as reduce.
Conflict in state 124 between rule 58 and token '%' resolved as reduce.
Conflict in state 124 between rule 58 and token '==' resolved as reduce.
Conflict in state 124 between rule 58 and token '>=' resolved as reduce.
Conflict in state 124 between rule 58 and token ' ' resolved as reduce.
Conflict in state 124 between rule 58 and token '*' resolved as reduce.
Conflict in state 124 between rule 58 and token '**=' resolved as reduce.
Conflict in state 124 between rule 58 and token '||' resolved as reduce.
Conflict in state 124 between rule 58 and token '->' resolved as reduce.
Conflict in state 124 between rule 58 and token '-=' resolved as reduce.
Conflict in state 124 between rule 58 and token '/=' resolved as reduce.
Conflict in state 124 between rule 58 and token '<=' resolved as reduce.
Conflict in state 124 between rule 58 and token '%=' resolved as reduce.
Conflict in state 124 between rule 58 and token '>' resolved as reduce.
Conflict in state 124 between rule 58 and token '^=' resolved as reduce.
Conflict in state 124 between rule 58 and token '+' resolved as reduce.
Conflict in state 124 between rule 58 and token '**' resolved as shift.
Conflict in state 124 between rule 58 and token '^' resolved as shift.
Conflict in state 124 between rule 58 and token 'per' resolved as reduce.
Conflict in state 124 between rule 58 and token '!=' resolved as reduce.
Conflict in state 124 between rule 58 and token '?' resolved as reduce.
Conflict in state 124 between rule 58 and token '&&' resolved as reduce.
Conflict in state 124 between rule 58 and token '^^' resolved as reduce.
Conflict in state 124 between rule 58 and token '/' resolved as reduce.
Conflict in state 124 between rule 58 and token '+=' resolved as reduce.
Conflict in state 124 between rule 58 and token '=' resolved as reduce.
Conflict in state 124 between rule 58 and token '<=>' resolved as reduce.
Conflict in state 125 between rule 52 and token '-' resolved as shift.
Conflict in state 125 between rule 52 and token 'conforms' resolved as shift.
Conflict in state 125 between rule 52 and token '*=' resolved as shift.
Conflict in state 125 between rule 52 and token '<' resolved as shift.
Conflict in state 125 between rule 52 and token '%' resolved as shift.
Conflict in state 125 between rule 52 and token '==' resolved as shift.
Conflict in state 125 between rule 52 and token '>=' resolved as shift.
Conflict in state 125 between rule 52 and token ' ' resolved as shift.
Conflict in state 125 between rule 52 and token '*' resolved as shift.
Conflict in state 125 between rule 52 and token '**=' resolved as shift.
Conflict in state 125 between rule 52 and token '||' resolved as shift.
Conflict in state 125 between rule 52 and token '->' resolved as shift.
Conflict in state 125 between rule 52 and token '-=' resolved as shift.
Conflict in state 125 between rule 52 and token '/=' resolved as shift.
Conflict in state 125 between rule 52 and token '<=' resolved as shift.
Conflict in state 125 between rule 52 and token '%=' resolved as shift.
Conflict in state 125 between rule 52 and token '>' resolved as shift.
Conflict in state 125 between rule 52 and token '^=' resolved as shift.
Conflict in state 125 between rule 52 and token '+' resolved as shift.
Conflict in state 125 between rule 52 and token '**' resolved as shift.
Conflict in state 125 between rule 52 and token '^' resolved as shift.
Conflict in state 125 between rule 52 and token 'per' resolved as shift.
Conflict in state 125 between rule 52 and token '!=' resolved as shift.
Conflict in state 125 between rule 52 and token '?' resolved as shift.
Conflict in state 125 between rule 52 and token '&&' resolved as shift.
Conflict in state 125 between rule 52 and token '^^' resolved as shift.
Conflict in state 125 between rule 52 and token '/' resolved as shift.
Conflict in state 125 between rule 52 and token '+=' resolved as shift.
Conflict in state 125 between rule 52 and token '=' resolved as shift.
Conflict in state 125 between rule 52 and token '<=>' resolved as shift.
Conflict in state 127 between rule 63 and token '-' resolved as shift.
Conflict in state 127 between rule 63 and token 'conforms' resolved as shift.
Conflict in state 127 between rule 63 and token '*=' resolved as reduce.
Conflict in state 127 between rule 63 and token '<' resolved as shift.
Conflict in state 127 between rule 63 and token '%' resolved as shift.
Conflict in state 127 between rule 63 and token '==' resolved as shift.
Conflict in state 127 between rule 63 and token '>=' resolved as shift.
Conflict in state 127 between rule 63 and token ' ' resolved as shift.
Conflict in state 127 between rule 63 and token '*' resolved as shift.
Conflict in state 127 between rule 63 and token '**=' resolved as reduce.
Conflict in state 127 between rule 63 and token '||' resolved as reduce.
Conflict in state 127 between rule 63 and token '->' resolved as reduce.
Conflict in state 127 between rule 63 and token '-=' resolved as reduce.
Conflict in state 127 between rule 63 and token '/=' resolved as reduce.
Conflict in state 127 between rule 63 and token '<=' resolved as shift.
Conflict in state 127 between rule 63 and token '%=' resolved as reduce.
Conflict in state 127 between rule 63 and token '>' resolved as shift.
Conflict in state 127 between rule 63 and token '^=' resolved as reduce.
Conflict in state 127 between rule 63 and token '+' resolved as shift.
Conflict in state 127 between rule 63 and token '**' resolved as shift.
Conflict in state 127 between rule 63 and token '^' resolved as shift.
Conflict in state 127 between rule 63 and token 'per' resolved as shift.
Conflict in state 127 between rule 63 and token '!=' resolved as shift.
Conflict in state 127 between rule 63 and token '?' resolved as reduce.
Conflict in state 127 between rule 63 and token '&&' resolved as reduce.
Conflict in state 127 between rule 63 and token '^^' resolved as reduce.
Conflict in state 127 between rule 63 and token '/' resolved as shift.
Conflict in state 127 between rule 63 and token '+=' resolved as reduce.
Conflict in state 127 between rule 63 and token '=' resolved as reduce.
Conflict in state 127 between rule 63 and token '<=>' resolved as shift.
Conflict in state 128 between rule 97 and token '-' resolved as shift.
Conflict in state 128 between rule 97 and token 'conforms' resolved as shift.
Conflict in state 128 between rule 97 and token '*=' resolved as reduce.
Conflict in state 128 between rule 97 and token '<' resolved as shift.
Conflict in state 128 between rule 97 and token '%' resolved as shift.
Conflict in state 128 between rule 97 and token '==' resolved as shift.
Conflict in state 128 between rule 97 and token '>=' resolved as shift.
Conflict in state 128 between rule 97 and token ' ' resolved as shift.
Conflict in state 128 between rule 97 and token '*' resolved as shift.
Conflict in state 128 between rule 97 and token '**=' resolved as reduce.
Conflict in state 128 between rule 97 and token '||' resolved as shift.
Conflict in state 128 between rule 97 and token '->' resolved as reduce.
Conflict in state 128 between rule 97 and token '-=' resolved as reduce.
Conflict in state 128 between rule 97 and token '/=' resolved as reduce.
Conflict in state 128 between rule 97 and token '<=' resolved as shift.
Conflict in state 128 between rule 97 and token '%=' resolved as reduce.
Conflict in state 128 between rule 97 and token '>' resolved as shift.
Conflict in state 128 between rule 97 and token '^=' resolved as reduce.
Conflict in state 128 between rule 97 and token '+' resolved as shift.
Conflict in state 128 between rule 97 and token '**' resolved as shift.
Conflict in state 128 between rule 97 and token '^' resolved as shift.
Conflict in state 128 between rule 97 and token 'per' resolved as shift.
Conflict in state 128 between rule 97 and token '!=' resolved as shift.
Conflict in state 128 between rule 97 and token '?' resolved as shift.
Conflict in state 128 between rule 97 and token '&&' resolved as shift.
Conflict in state 128 between rule 97 and token '^^' resolved as shift.
Conflict in state 128 between rule 97 and token '/' resolved as shift.
Conflict in state 128 between rule 97 and token '+=' resolved as reduce.
Conflict in state 128 between rule 97 and token '=' resolved as reduce.
Conflict in state 128 between rule 97 and token '<=>' resolved as shift.
Conflict in state 129 between rule 48 and token '-' resolved as shift.
Conflict in state 129 between rule 48 and token 'conforms' resolved as shift.
Conflict in state 129 between rule 48 and token '*=' resolved as shift.
Conflict in state 129 between rule 48 and token '<' resolved as shift.
Conflict in state 129 between rule 48 and token '%' resolved as shift.
Conflict in state 129 between rule 48 and token '==' resolved as shift.
Conflict in state 129 between rule 48 and token '>=' resolved as shift.
Conflict in state 129 between rule 48 and token ' ' resolved as shift.
Conflict in state 129 between rule 48 and token '*' resolved as shift.
Conflict in state 129 between rule 48 and token '**=' resolved as shift.
Conflict in state 129 between rule 48 and token '||' resolved as shift.
Conflict in state 129 between rule 48 and token '->' resolved as shift.
Conflict in state 129 between rule 48 and token '-=' resolved as shift.
Conflict in state 129 between rule 48 and token '/=' resolved as shift.
Conflict in state 129 between rule 48 and token '<=' resolved as shift.
Conflict in state 129 between rule 48 and token '%=' resolved as shift.
Conflict in state 129 between rule 48 and token '>' resolved as shift.
Conflict in state 129 between rule 48 and token '^=' resolved as shift.
Conflict in state 129 between rule 48 and token '+' resolved as shift.
Conflict in state 129 between rule 48 and token '**' resolved as shift.
Conflict in state 129 between rule 48 and token '^' resolved as shift.
Conflict in state 129 between rule 48 and token 'per' resolved as shift.
Conflict in state 129 between rule 48 and token '!=' resolved as shift.
Conflict in state 129 between rule 48 and token '?' resolved as shift.
Conflict in state 129 between rule 48 and token '&&' resolved as shift.
Conflict in state 129 between rule 48 and token '^^' resolved as shift.
Conflict in state 129 between rule 48 and token '/' resolved as shift.
Conflict in state 129 between rule 48 and token '+=' resolved as shift.
Conflict in state 129 between rule 48 and token '=' resolved as shift.
Conflict in state 129 between rule 48 and token '<=>' resolved as shift.
Conflict in state 130 between rule 49 and token '-' resolved as shift.
Conflict in state 130 between rule 49 and token 'conforms' resolved as shift.
Conflict in state 130 between rule 49 and token '*=' resolved as shift.
Conflict in state 130 between rule 49 and token '<' resolved as shift.
Conflict in state 130 between rule 49 and token '%' resolved as shift.
Conflict in state 130 between rule 49 and token '==' resolved as shift.
Conflict in state 130 between rule 49 and token '>=' resolved as shift.
Conflict in state 130 between rule 49 and token ' ' resolved as shift.
Conflict in state 130 between rule 49 and token '*' resolved as shift.
Conflict in state 130 between rule 49 and token '**=' resolved as shift.
Conflict in state 130 between rule 49 and token '||' resolved as shift.
Conflict in state 130 between rule 49 and token '->' resolved as shift.
Conflict in state 130 between rule 49 and token '-=' resolved as shift.
Conflict in state 130 between rule 49 and token '/=' resolved as shift.
Conflict in state 130 between rule 49 and token '<=' resolved as shift.
Conflict in state 130 between rule 49 and token '%=' resolved as shift.
Conflict in state 130 between rule 49 and token '>' resolved as shift.
Conflict in state 130 between rule 49 and token '^=' resolved as shift.
Conflict in state 130 between rule 49 and token '+' resolved as shift.
Conflict in state 130 between rule 49 and token '**' resolved as shift.
Conflict in state 130 between rule 49 and token '^' resolved as shift.
Conflict in state 130 between rule 49 and token 'per' resolved as shift.
Conflict in state 130 between rule 49 and token '!=' resolved as shift.
Conflict in state 130 between rule 49 and token '?' resolved as shift.
Conflict in state 130 between rule 49 and token '&&' resolved as shift.
Conflict in state 130 between rule 49 and token '^^' resolved as shift.
Conflict in state 130 between rule 49 and token '/' resolved as shift.
Conflict in state 130 between rule 49 and token '+=' resolved as shift.
Conflict in state 130 between rule 49 and token '=' resolved as shift.
Conflict in state 130 between rule 49 and token '<=>' resolved as shift.
Conflict in state 131 between rule 68 and token '-' resolved as shift.
Conflict in state 131 between rule 68 and token 'conforms' resolved as reduce.
Conflict in state 131 between rule 68 and token '*=' resolved as reduce.
Conflict in state 131 between rule 68 and token '<' resolved as error.
Conflict in state 131 between rule 68 and token '%' resolved as shift.
Conflict in state 131 between rule 68 and token '==' resolved as error.
Conflict in state 131 between rule 68 and token '>=' resolved as error.
Conflict in state 131 between rule 68 and token ' ' resolved as shift.
Conflict in state 131 between rule 68 and token '*' resolved as shift.
Conflict in state 131 between rule 68 and token '**=' resolved as reduce.
Conflict in state 131 between rule 68 and token '||' resolved as reduce.
Conflict in state 131 between rule 68 and token '->' resolved as reduce.
Conflict in state 131 between rule 68 and token '-=' resolved as reduce.
Conflict in state 131 between rule 68 and token '/=' resolved as reduce.
Conflict in state 131 between rule 68 and token '<=' resolved as error.
Conflict in state 131 between rule 68 and token '%=' resolved as reduce.
Conflict in state 131 between rule 68 and token '>' resolved as error.
Conflict in state 131 between rule 68 and token '^=' resolved as reduce.
Conflict in state 131 between rule 68 and token '+' resolved as shift.
Conflict in state 131 between rule 68 and token '**' resolved as shift.
Conflict in state 131 between rule 68 and token '^' resolved as shift.
Conflict in state 131 between rule 68 and token 'per' resolved as shift.
Conflict in state 131 between rule 68 and token '!=' resolved as error.
Conflict in state 131 between rule 68 and token '?' resolved as reduce.
Conflict in state 131 between rule 68 and token '&&' resolved as reduce.
Conflict in state 131 between rule 68 and token '^^' resolved as reduce.
Conflict in state 131 between rule 68 and token '/' resolved as shift.
Conflict in state 131 between rule 68 and token '+=' resolved as reduce.
Conflict in state 131 between rule 68 and token '=' resolved as reduce.
Conflict in state 131 between rule 68 and token '<=>' resolved as error.
Conflict in state 132 between rule 67 and token '-' resolved as shift.
Conflict in state 132 between rule 67 and token 'conforms' resolved as reduce.
Conflict in state 132 between rule 67 and token '*=' resolved as reduce.
Conflict in state 132 between rule 67 and token '<' resolved as error.
Conflict in state 132 between rule 67 and token '%' resolved as shift.
Conflict in state 132 between rule 67 and token '==' resolved as error.
Conflict in state 132 between rule 67 and token '>=' resolved as error.
Conflict in state 132 between rule 67 and token ' ' resolved as shift.
Conflict in state 132 between rule 67 and token '*' resolved as shift.
Conflict in state 132 between rule 67 and token '**=' resolved as reduce.
Conflict in state 132 between rule 67 and token '||' resolved as reduce.
Conflict in state 132 between rule 67 and token '->' resolved as reduce.
Conflict in state 132 between rule 67 and token '-=' resolved as reduce.
Conflict in state 132 between rule 67 and token '/=' resolved as reduce.
Conflict in state 132 between rule 67 and token '<=' resolved as error.
Conflict in state 132 between rule 67 and token '%=' resolved as reduce.
Conflict in state 132 between rule 67 and token '>' resolved as error.
Conflict in state 132 between rule 67 and token '^=' resolved as reduce.
Conflict in state 132 between rule 67 and token '+' resolved as shift.
Conflict in state 132 between rule 67 and token '**' resolved as shift.
Conflict in state 132 between rule 67 and token '^' resolved as shift.
Conflict in state 132 between rule 67 and token 'per' resolved as shift.
Conflict in state 132 between rule 67 and token '!=' resolved as error.
Conflict in state 132 between rule 67 and token '?' resolved as reduce.
Conflict in state 132 between rule 67 and token '&&' resolved as reduce.
Conflict in state 132 between rule 67 and token '^^' resolved as reduce.
Conflict in state 132 between rule 67 and token '/' resolved as shift.
Conflict in state 132 between rule 67 and token '+=' resolved as reduce.
Conflict in state 132 between rule 67 and token '=' resolved as reduce.
Conflict in state 132 between rule 67 and token '<=>' resolved as error.
Conflict in state 133 between rule 51 and token '-' resolved as shift.
Conflict in state 133 between rule 51 and token 'conforms' resolved as shift.
Conflict in state 133 between rule 51 and token '*=' resolved as shift.
Conflict in state 133 between rule 51 and token '<' resolved as shift.
Conflict in state 133 between rule 51 and token '%' resolved as shift.
Conflict in state 133 between rule 51 and token '==' resolved as shift.
Conflict in state 133 between rule 51 and token '>=' resolved as shift.
Conflict in state 133 between rule 51 and token ' ' resolved as shift.
Conflict in state 133 between rule 51 and token '*' resolved as shift.
Conflict in state 133 between rule 51 and token '**=' resolved as shift.
Conflict in state 133 between rule 51 and token '||' resolved as shift.
Conflict in state 133 between rule 51 and token '->' resolved as shift.
Conflict in state 133 between rule 51 and token '-=' resolved as shift.
Conflict in state 133 between rule 51 and token '/=' resolved as shift.
Conflict in state 133 between rule 51 and token '<=' resolved as shift.
Conflict in state 133 between rule 51 and token '%=' resolved as shift.
Conflict in state 133 between rule 51 and token '>' resolved as shift.
Conflict in state 133 between rule 51 and token '^=' resolved as shift.
Conflict in state 133 between rule 51 and token '+' resolved as shift.
Conflict in state 133 between rule 51 and token '**' resolved as shift.
Conflict in state 133 between rule 51 and token '^' resolved as shift.
Conflict in state 133 between rule 51 and token 'per' resolved as shift.
Conflict in state 133 between rule 51 and token '!=' resolved as shift.
Conflict in state 133 between rule 51 and token '?' resolved as shift.
Conflict in state 133 between rule 51 and token '&&' resolved as shift.
Conflict in state 133 between rule 51 and token '^^' resolved as shift.
Conflict in state 133 between rule 51 and token '/' resolved as shift.
Conflict in state 133 between rule 51 and token '+=' resolved as shift.
Conflict in state 133 between rule 51 and token '=' resolved as shift.
Conflict in state 133 between rule 51 and token '<=>' resolved as shift.
Conflict in state 134 between rule 53 and token '-' resolved as shift.
Conflict in state 134 between rule 53 and token 'conforms' resolved as shift.
Conflict in state 134 between rule 53 and token '*=' resolved as shift.
Conflict in state 134 between rule 53 and token '<' resolved as shift.
Conflict in state 134 between rule 53 and token '%' resolved as shift.
Conflict in state 134 between rule 53 and token '==' resolved as shift.
Conflict in state 134 between rule 53 and token '>=' resolved as shift.
Conflict in state 134 between rule 53 and token ' ' resolved as shift.
Conflict in state 134 between rule 53 and token '*' resolved as shift.
Conflict in state 134 between rule 53 and token '**=' resolved as shift.
Conflict in state 134 between rule 53 and token '||' resolved as shift.
Conflict in state 134 between rule 53 and token '->' resolved as shift.
Conflict in state 134 between rule 53 and token '-=' resolved as shift.
Conflict in state 134 between rule 53 and token '/=' resolved as shift.
Conflict in state 134 between rule 53 and token '<=' resolved as shift.
Conflict in state 134 between rule 53 and token '%=' resolved as shift.
Conflict in state 134 between rule 53 and token '>' resolved as shift.
Conflict in state 134 between rule 53 and token '^=' resolved as shift.
Conflict in state 134 between rule 53 and token '+' resolved as shift.
Conflict in state 134 between rule 53 and token '**' resolved as shift.
Conflict in state 134 between rule 53 and token '^' resolved as shift.
Conflict in state 134 between rule 53 and token 'per' resolved as shift.
Conflict in state 134 between rule 53 and token '!=' resolved as shift.
Conflict in state 134 between rule 53 and token '?' resolved as shift.
Conflict in state 134 between rule 53 and token '&&' resolved as shift.
Conflict in state 134 between rule 53 and token '^^' resolved as shift.
Conflict in state 134 between rule 53 and token '/' resolved as shift.
Conflict in state 134 between rule 53 and token '+=' resolved as shift.
Conflict in state 134 between rule 53 and token '=' resolved as shift.
Conflict in state 134 between rule 53 and token '<=>' resolved as shift.
Conflict in state 135 between rule 79 and token '-' resolved as reduce.
Conflict in state 135 between rule 79 and token 'conforms' resolved as reduce.
Conflict in state 135 between rule 79 and token '*=' resolved as reduce.
Conflict in state 135 between rule 79 and token '<' resolved as reduce.
Conflict in state 135 between rule 79 and token '%' resolved as shift.
Conflict in state 135 between rule 79 and token '==' resolved as reduce.
Conflict in state 135 between rule 79 and token '>=' resolved as reduce.
Conflict in state 135 between rule 79 and token ' ' resolved as shift.
Conflict in state 135 between rule 79 and token '*' resolved as shift.
Conflict in state 135 between rule 79 and token '**=' resolved as reduce.
Conflict in state 135 between rule 79 and token '||' resolved as reduce.
Conflict in state 135 between rule 79 and token '->' resolved as reduce.
Conflict in state 135 between rule 79 and token '-=' resolved as reduce.
Conflict in state 135 between rule 79 and token '/=' resolved as reduce.
Conflict in state 135 between rule 79 and token '<=' resolved as reduce.
Conflict in state 135 between rule 79 and token '%=' resolved as reduce.
Conflict in state 135 between rule 79 and token '>' resolved as reduce.
Conflict in state 135 between rule 79 and token '^=' resolved as reduce.
Conflict in state 135 between rule 79 and token '+' resolved as reduce.
Conflict in state 135 between rule 79 and token '**' resolved as shift.
Conflict in state 135 between rule 79 and token '^' resolved as shift.
Conflict in state 135 between rule 79 and token 'per' resolved as shift.
Conflict in state 135 between rule 79 and token '!=' resolved as reduce.
Conflict in state 135 between rule 79 and token '?' resolved as reduce.
Conflict in state 135 between rule 79 and token '&&' resolved as reduce.
Conflict in state 135 between rule 79 and token '^^' resolved as reduce.
Conflict in state 135 between rule 79 and token '/' resolved as shift.
Conflict in state 135 between rule 79 and token '+=' resolved as reduce.
Conflict in state 135 between rule 79 and token '=' resolved as reduce.
Conflict in state 135 between rule 79 and token '<=>' resolved as reduce.
Conflict in state 136 between rule 77 and token '-' resolved as reduce.
Conflict in state 136 between rule 77 and token 'conforms' resolved as reduce.
Conflict in state 136 between rule 77 and token '*=' resolved as reduce.
Conflict in state 136 between rule 77 and token '<' resolved as reduce.
Conflict in state 136 between rule 77 and token '%' resolved as reduce.
Conflict in state 136 between rule 77 and token '==' resolved as reduce.
Conflict in state 136 between rule 77 and token '>=' resolved as reduce.
Conflict in state 136 between rule 77 and token ' ' resolved as reduce.
Conflict in state 136 between rule 77 and token '*' resolved as reduce.
Conflict in state 136 between rule 77 and token '**=' resolved as reduce.
Conflict in state 136 between rule 77 and token '||' resolved as reduce.
Conflict in state 136 between rule 77 and token '->' resolved as reduce.
Conflict in state 136 between rule 77 and token '-=' resolved as reduce.
Conflict in state 136 between rule 77 and token '/=' resolved as reduce.
Conflict in state 136 between rule 77 and token '<=' resolved as reduce.
Conflict in state 136 between rule 77 and token '%=' resolved as reduce.
Conflict in state 136 between rule 77 and token '>' resolved as reduce.
Conflict in state 136 between rule 77 and token '^=' resolved as reduce.
Conflict in state 136 between rule 77 and token '+' resolved as reduce.
Conflict in state 136 between rule 77 and token '**' resolved as shift.
Conflict in state 136 between rule 77 and token '^' resolved as shift.
Conflict in state 136 between rule 77 and token 'per' resolved as reduce.
Conflict in state 136 between rule 77 and token '!=' resolved as reduce.
Conflict in state 136 between rule 77 and token '?' resolved as reduce.
Conflict in state 136 between rule 77 and token '&&' resolved as reduce.
Conflict in state 136 between rule 77 and token '^^' resolved as reduce.
Conflict in state 136 between rule 77 and token '/' resolved as reduce.
Conflict in state 136 between rule 77 and token '+=' resolved as reduce.
Conflict in state 136 between rule 77 and token '=' resolved as reduce.
Conflict in state 136 between rule 77 and token '<=>' resolved as reduce.
Conflict in state 137 between rule 78 and token '-' resolved as reduce.
Conflict in state 137 between rule 78 and token 'conforms' resolved as reduce.
Conflict in state 137 between rule 78 and token '*=' resolved as reduce.
Conflict in state 137 between rule 78 and token '<' resolved as reduce.
Conflict in state 137 between rule 78 and token '%' resolved as reduce.
Conflict in state 137 between rule 78 and token '==' resolved as reduce.
Conflict in state 137 between rule 78 and token '>=' resolved as reduce.
Conflict in state 137 between rule 78 and token ' ' resolved as reduce.
Conflict in state 137 between rule 78 and token '*' resolved as reduce.
Conflict in state 137 between rule 78 and token '**=' resolved as reduce.
Conflict in state 137 between rule 78 and token '||' resolved as reduce.
Conflict in state 137 between rule 78 and token '->' resolved as reduce.
Conflict in state 137 between rule 78 and token '-=' resolved as reduce.
Conflict in state 137 between rule 78 and token '/=' resolved as reduce.
Conflict in state 137 between rule 78 and token '<=' resolved as reduce.
Conflict in state 137 between rule 78 and token '%=' resolved as reduce.
Conflict in state 137 between rule 78 and token '>' resolved as reduce.
Conflict in state 137 between rule 78 and token '^=' resolved as reduce.
Conflict in state 137 between rule 78 and token '+' resolved as reduce.
Conflict in state 137 between rule 78 and token '**' resolved as shift.
Conflict in state 137 between rule 78 and token '^' resolved as shift.
Conflict in state 137 between rule 78 and token 'per' resolved as reduce.
Conflict in state 137 between rule 78 and token '!=' resolved as reduce.
Conflict in state 137 between rule 78 and token '?' resolved as reduce.
Conflict in state 137 between rule 78 and token '&&' resolved as reduce.
Conflict in state 137 between rule 78 and token '^^' resolved as reduce.
Conflict in state 137 between rule 78 and token '/' resolved as reduce.
Conflict in state 137 between rule 78 and token '+=' resolved as reduce.
Conflict in state 137 between rule 78 and token '=' resolved as reduce.
Conflict in state 137 between rule 78 and token '<=>' resolved as reduce.
Conflict in state 138 between rule 82 and token '-' resolved as reduce.
Conflict in state 138 between rule 82 and token 'conforms' resolved as reduce.
Conflict in state 138 between rule 82 and token '*=' resolved as reduce.
Conflict in state 138 between rule 82 and token '<' resolved as reduce.
Conflict in state 138 between rule 82 and token '%' resolved as shift.
Conflict in state 138 between rule 82 and token '==' resolved as reduce.
Conflict in state 138 between rule 82 and token '>=' resolved as reduce.
Conflict in state 138 between rule 82 and token ' ' resolved as shift.
Conflict in state 138 between rule 82 and token '*' resolved as shift.
Conflict in state 138 between rule 82 and token '**=' resolved as reduce.
Conflict in state 138 between rule 82 and token '||' resolved as reduce.
Conflict in state 138 between rule 82 and token '->' resolved as reduce.
Conflict in state 138 between rule 82 and token '-=' resolved as reduce.
Conflict in state 138 between rule 82 and token '/=' resolved as reduce.
Conflict in state 138 between rule 82 and token '<=' resolved as reduce.
Conflict in state 138 between rule 82 and token '%=' resolved as reduce.
Conflict in state 138 between rule 82 and token '>' resolved as reduce.
Conflict in state 138 between rule 82 and token '^=' resolved as reduce.
Conflict in state 138 between rule 82 and token '+' resolved as reduce.
Conflict in state 138 between rule 82 and token '**' resolved as shift.
Conflict in state 138 between rule 82 and token '^' resolved as shift.
Conflict in state 138 between rule 82 and token 'per' resolved as reduce.
Conflict in state 138 between rule 82 and token '!=' resolved as reduce.
Conflict in state 138 between rule 82 and token '?' resolved as reduce.
Conflict in state 138 between rule 82 and token '&&' resolved as reduce.
Conflict in state 138 between rule 82 and token '^^' resolved as reduce.
Conflict in state 138 between rule 82 and token '/' resolved as shift.
Conflict in state 138 between rule 82 and token '+=' resolved as reduce.
Conflict in state 138 between rule 82 and token '=' resolved as reduce.
Conflict in state 138 between rule 82 and token '<=>' resolved as reduce.
Conflict in state 140 between rule 72 and token '-' resolved as shift.
Conflict in state 140 between rule 72 and token 'conforms' resolved as reduce.
Conflict in state 140 between rule 72 and token '*=' resolved as reduce.
Conflict in state 140 between rule 72 and token '<' resolved as error.
Conflict in state 140 between rule 72 and token '%' resolved as shift.
Conflict in state 140 between rule 72 and token '==' resolved as error.
Conflict in state 140 between rule 72 and token '>=' resolved as error.
Conflict in state 140 between rule 72 and token ' ' resolved as shift.
Conflict in state 140 between rule 72 and token '*' resolved as shift.
Conflict in state 140 between rule 72 and token '**=' resolved as reduce.
Conflict in state 140 between rule 72 and token '||' resolved as reduce.
Conflict in state 140 between rule 72 and token '->' resolved as reduce.
Conflict in state 140 between rule 72 and token '-=' resolved as reduce.
Conflict in state 140 between rule 72 and token '/=' resolved as reduce.
Conflict in state 140 between rule 72 and token '<=' resolved as error.
Conflict in state 140 between rule 72 and token '%=' resolved as reduce.
Conflict in state 140 between rule 72 and token '>' resolved as error.
Conflict in state 140 between rule 72 and token '^=' resolved as reduce.
Conflict in state 140 between rule 72 and token '+' resolved as shift.
Conflict in state 140 between rule 72 and token '**' resolved as shift.
Conflict in state 140 between rule 72 and token '^' resolved as shift.
Conflict in state 140 between rule 72 and token 'per' resolved as shift.
Conflict in state 140 between rule 72 and token '!=' resolved as error.
Conflict in state 140 between rule 72 and token '?' resolved as reduce.
Conflict in state 140 between rule 72 and token '&&' resolved as reduce.
Conflict in state 140 between rule 72 and token '^^' resolved as reduce.
Conflict in state 140 between rule 72 and token '/' resolved as shift.
Conflict in state 140 between rule 72 and token '+=' resolved as reduce.
Conflict in state 140 between rule 72 and token '=' resolved as reduce.
Conflict in state 140 between rule 72 and token '<=>' resolved as error.
Conflict in state 142 between rule 62 and token '-' resolved as shift.
Conflict in state 142 between rule 62 and token 'conforms' resolved as shift.
Conflict in state 142 between rule 62 and token '*=' resolved as reduce.
Conflict in state 142 between rule 62 and token '<' resolved as shift.
Conflict in state 142 between rule 62 and token '%' resolved as shift.
Conflict in state 142 between rule 62 and token '==' resolved as shift.
Conflict in state 142 between rule 62 and token '>=' resolved as shift.
Conflict in state 142 between rule 62 and token ' ' resolved as shift.
Conflict in state 142 between rule 62 and token '*' resolved as shift.
Conflict in state 142 between rule 62 and token '**=' resolved as reduce.
Conflict in state 142 between rule 62 and token '||' resolved as reduce.
Conflict in state 142 between rule 62 and token '->' resolved as reduce.
Conflict in state 142 between rule 62 and token '-=' resolved as reduce.
Conflict in state 142 between rule 62 and token '/=' resolved as reduce.
Conflict in state 142 between rule 62 and token '<=' resolved as shift.
Conflict in state 142 between rule 62 and token '%=' resolved as reduce.
Conflict in state 142 between rule 62 and token '>' resolved as shift.
Conflict in state 142 between rule 62 and token '^=' resolved as reduce.
Conflict in state 142 between rule 62 and token '+' resolved as shift.
Conflict in state 142 between rule 62 and token '**' resolved as shift.
Conflict in state 142 between rule 62 and token '^' resolved as shift.
Conflict in state 142 between rule 62 and token 'per' resolved as shift.
Conflict in state 142 between rule 62 and token '!=' resolved as shift.
Conflict in state 142 between rule 62 and token '?' resolved as reduce.
Conflict in state 142 between rule 62 and token '&&' resolved as reduce.
Conflict in state 142 between rule 62 and token '^^' resolved as reduce.
Conflict in state 142 between rule 62 and token '/' resolved as shift.
Conflict in state 142 between rule 62 and token '+=' resolved as reduce.
Conflict in state 142 between rule 62 and token '=' resolved as reduce.
Conflict in state 142 between rule 62 and token '<=>' resolved as shift.
Conflict in state 143 between rule 64 and token '-' resolved as shift.
Conflict in state 143 between rule 64 and token 'conforms' resolved as shift.
Conflict in state 143 between rule 64 and token '*=' resolved as reduce.
Conflict in state 143 between rule 64 and token '<' resolved as shift.
Conflict in state 143 between rule 64 and token '%' resolved as shift.
Conflict in state 143 between rule 64 and token '==' resolved as shift.
Conflict in state 143 between rule 64 and token '>=' resolved as shift.
Conflict in state 143 between rule 64 and token ' ' resolved as shift.
Conflict in state 143 between rule 64 and token '*' resolved as shift.
Conflict in state 143 between rule 64 and token '**=' resolved as reduce.
Conflict in state 143 between rule 64 and token '||' resolved as reduce.
Conflict in state 143 between rule 64 and token '->' resolved as reduce.
Conflict in state 143 between rule 64 and token '-=' resolved as reduce.
Conflict in state 143 between rule 64 and token '/=' resolved as reduce.
Conflict in state 143 between rule 64 and token '<=' resolved as shift.
Conflict in state 143 between rule 64 and token '%=' resolved as reduce.
Conflict in state 143 between rule 64 and token '>' resolved as shift.
Conflict in state 143 between rule 64 and token '^=' resolved as reduce.
Conflict in state 143 between rule 64 and token '+' resolved as shift.
Conflict in state 143 between rule 64 and token '**' resolved as shift.
Conflict in state 143 between rule 64 and token '^' resolved as shift.
Conflict in state 143 between rule 64 and token 'per' resolved as shift.
Conflict in state 143 between rule 64 and token '!=' resolved as shift.
Conflict in state 143 between rule 64 and token '?' resolved as reduce.
Conflict in state 143 between rule 64 and token '&&' resolved as reduce.
Conflict in state 143 between rule 64 and token '^^' resolved as reduce.
Conflict in state 143 between rule 64 and token '/' resolved as shift.
Conflict in state 143 between rule 64 and token '+=' resolved as reduce.
Conflict in state 143 between rule 64 and token '=' resolved as reduce.
Conflict in state 143 between rule 64 and token '<=>' resolved as shift.
Conflict in state 144 between rule 81 and token '-' resolved as reduce.
Conflict in state 144 between rule 81 and token 'conforms' resolved as reduce.
Conflict in state 144 between rule 81 and token '*=' resolved as reduce.
Conflict in state 144 between rule 81 and token '<' resolved as reduce.
Conflict in state 144 between rule 81 and token '%' resolved as reduce.
Conflict in state 144 between rule 81 and token '==' resolved as reduce.
Conflict in state 144 between rule 81 and token '>=' resolved as reduce.
Conflict in state 144 between rule 81 and token ' ' resolved as reduce.
Conflict in state 144 between rule 81 and token '*' resolved as reduce.
Conflict in state 144 between rule 81 and token '**=' resolved as reduce.
Conflict in state 144 between rule 81 and token '||' resolved as reduce.
Conflict in state 144 between rule 81 and token '->' resolved as reduce.
Conflict in state 144 between rule 81 and token '-=' resolved as reduce.
Conflict in state 144 between rule 81 and token '/=' resolved as reduce.
Conflict in state 144 between rule 81 and token '<=' resolved as reduce.
Conflict in state 144 between rule 81 and token '%=' resolved as reduce.
Conflict in state 144 between rule 81 and token '>' resolved as reduce.
Conflict in state 144 between rule 81 and token '^=' resolved as reduce.
Conflict in state 144 between rule 81 and token '+' resolved as reduce.
Conflict in state 144 between rule 81 and token '**' resolved as shift.
Conflict in state 144 between rule 81 and token '^' resolved as shift.
Conflict in state 144 between rule 81 and token 'per' resolved as reduce.
Conflict in state 144 between rule 81 and token '!=' resolved as reduce.
Conflict in state 144 between rule 81 and token '?' resolved as reduce.
Conflict in state 144 between rule 81 and token '&&' resolved as reduce.
Conflict in state 144 between rule 81 and token '^^' resolved as reduce.
Conflict in state 144 between rule 81 and token '/' resolved as reduce.
Conflict in state 144 between rule 81 and token '+=' resolved as reduce.
Conflict in state 144 between rule 81 and token '=' resolved as reduce.
Conflict in state 144 between rule 81 and token '<=>' resolved as reduce.
Conflict in state 145 between rule 47 and token '-' resolved as shift.
Conflict in state 145 between rule 47 and token 'conforms' resolved as shift.
Conflict in state 145 between rule 47 and token '*=' resolved as shift.
Conflict in state 145 between rule 47 and token '<' resolved as shift.
Conflict in state 145 between rule 47 and token '%' resolved as shift.
Conflict in state 145 between rule 47 and token '==' resolved as shift.
Conflict in state 145 between rule 47 and token '>=' resolved as shift.
Conflict in state 145 between rule 47 and token ' ' resolved as shift.
Conflict in state 145 between rule 47 and token '*' resolved as shift.
Conflict in state 145 between rule 47 and token '**=' resolved as shift.
Conflict in state 145 between rule 47 and token '||' resolved as shift.
Conflict in state 145 between rule 47 and token '->' resolved as shift.
Conflict in state 145 between rule 47 and token '-=' resolved as shift.
Conflict in state 145 between rule 47 and token '/=' resolved as shift.
Conflict in state 145 between rule 47 and token '<=' resolved as shift.
Conflict in state 145 between rule 47 and token '%=' resolved as shift.
Conflict in state 145 between rule 47 and token '>' resolved as shift.
Conflict in state 145 between rule 47 and token '^=' resolved as shift.
Conflict in state 145 between rule 47 and token '+' resolved as shift.
Conflict in state 145 between rule 47 and token '**' resolved as shift.
Conflict in state 145 between rule 47 and token '^' resolved as shift.
Conflict in state 145 between rule 47 and token 'per' resolved as shift.
Conflict in state 145 between rule 47 and token '!=' resolved as shift.
Conflict in state 145 between rule 47 and token '?' resolved as shift.
Conflict in state 145 between rule 47 and token '&&' resolved as shift.
Conflict in state 145 between rule 47 and token '^^' resolved as shift.
Conflict in state 145 between rule 47 and token '/' resolved as shift.
Conflict in state 145 between rule 47 and token '+=' resolved as shift.
Conflict in state 145 between rule 47 and token '=' resolved as shift.
Conflict in state 145 between rule 47 and token '<=>' resolved as shift.
Conflict in state 146 between rule 46 and token '-' resolved as shift.
Conflict in state 146 between rule 46 and token 'conforms' resolved as shift.
Conflict in state 146 between rule 46 and token '*=' resolved as shift.
Conflict in state 146 between rule 46 and token '<' resolved as shift.
Conflict in state 146 between rule 46 and token '%' resolved as shift.
Conflict in state 146 between rule 46 and token '==' resolved as shift.
Conflict in state 146 between rule 46 and token '>=' resolved as shift.
Conflict in state 146 between rule 46 and token ' ' resolved as shift.
Conflict in state 146 between rule 46 and token '*' resolved as shift.
Conflict in state 146 between rule 46 and token '**=' resolved as shift.
Conflict in state 146 between rule 46 and token '||' resolved as shift.
Conflict in state 146 between rule 46 and token '->' resolved as shift.
Conflict in state 146 between rule 46 and token '-=' resolved as shift.
Conflict in state 146 between rule 46 and token '/=' resolved as shift.
Conflict in state 146 between rule 46 and token '<=' resolved as shift.
Conflict in state 146 between rule 46 and token '%=' resolved as shift.
Conflict in state 146 between rule 46 and token '>' resolved as shift.
Conflict in state 146 between rule 46 and token '^=' resolved as shift.
Conflict in state 146 between rule 46 and token '+' resolved as shift.
Conflict in state 146 between rule 46 and token '**' resolved as shift.
Conflict in state 146 between rule 46 and token '^' resolved as shift.
Conflict in state 146 between rule 46 and token 'per' resolved as shift.
Conflict in state 146 between rule 46 and token '!=' resolved as shift.
Conflict in state 146 between rule 46 and token '?' resolved as shift.
Conflict in state 146 between rule 46 and token '&&' resolved as shift.
Conflict in state 146 between rule 46 and token '^^' resolved as shift.
Conflict in state 146 between rule 46 and token '/' resolved as shift.
Conflict in state 146 between rule 46 and token '+=' resolved as shift.
Conflict in state 146 between rule 46 and token '=' resolved as shift.
Conflict in state 146 between rule 46 and token '<=>' resolved as shift.
Conflict in state 147 between rule 71 and token '-' resolved as shift.
Conflict in state 147 between rule 71 and token 'conforms' resolved as reduce.
Conflict in state 147 between rule 71 and token '*=' resolved as reduce.
Conflict in state 147 between rule 71 and token '<' resolved as error.
Conflict in state 147 between rule 71 and token '%' resolved as shift.
Conflict in state 147 between rule 71 and token '==' resolved as error.
Conflict in state 147 between rule 71 and token '>=' resolved as error.
Conflict in state 147 between rule 71 and token ' ' resolved as shift.
Conflict in state 147 between rule 71 and token '*' resolved as shift.
Conflict in state 147 between rule 71 and token '**=' resolved as reduce.
Conflict in state 147 between rule 71 and token '||' resolved as reduce.
Conflict in state 147 between rule 71 and token '->' resolved as reduce.
Conflict in state 147 between rule 71 and token '-=' resolved as reduce.
Conflict in state 147 between rule 71 and token '/=' resolved as reduce.
Conflict in state 147 between rule 71 and token '<=' resolved as error.
Conflict in state 147 between rule 71 and token '%=' resolved as reduce.
Conflict in state 147 between rule 71 and token '>' resolved as error.
Conflict in state 147 between rule 71 and token '^=' resolved as reduce.
Conflict in state 147 between rule 71 and token '+' resolved as shift.
Conflict in state 147 between rule 71 and token '**' resolved as shift.
Conflict in state 147 between rule 71 and token '^' resolved as shift.
Conflict in state 147 between rule 71 and token 'per' resolved as shift.
Conflict in state 147 between rule 71 and token '!=' resolved as error.
Conflict in state 147 between rule 71 and token '?' resolved as reduce.
Conflict in state 147 between rule 71 and token '&&' resolved as reduce.
Conflict in state 147 between rule 71 and token '^^' resolved as reduce.
Conflict in state 147 between rule 71 and token '/' resolved as shift.
Conflict in state 147 between rule 71 and token '+=' resolved as reduce.
Conflict in state 147 between rule 71 and token '=' resolved as reduce.
Conflict in state 147 between rule 71 and token '<=>' resolved as error.
Conflict in state 148 between rule 93 and token '-' resolved as shift.
Conflict in state 148 between rule 93 and token 'conforms' resolved as shift.
Conflict in state 148 between rule 93 and token '*=' resolved as shift.
Conflict in state 148 between rule 93 and token '<' resolved as shift.
Conflict in state 148 between rule 93 and token '%' resolved as shift.
Conflict in state 148 between rule 93 and token '==' resolved as shift.
Conflict in state 148 between rule 93 and token '>=' resolved as shift.
Conflict in state 148 between rule 93 and token ' ' resolved as shift.
Conflict in state 148 between rule 93 and token '*' resolved as shift.
Conflict in state 148 between rule 93 and token '**=' resolved as shift.
Conflict in state 148 between rule 93 and token '||' resolved as shift.
Conflict in state 148 between rule 93 and token '->' resolved as shift.
Conflict in state 148 between rule 93 and token '-=' resolved as shift.
Conflict in state 148 between rule 93 and token '/=' resolved as shift.
Conflict in state 148 between rule 93 and token '<=' resolved as shift.
Conflict in state 148 between rule 93 and token '%=' resolved as shift.
Conflict in state 148 between rule 93 and token '>' resolved as shift.
Conflict in state 148 between rule 93 and token '^=' resolved as shift.
Conflict in state 148 between rule 93 and token '+' resolved as shift.
Conflict in state 148 between rule 93 and token '**' resolved as shift.
Conflict in state 148 between rule 93 and token '^' resolved as shift.
Conflict in state 148 between rule 93 and token 'per' resolved as shift.
Conflict in state 148 between rule 93 and token '!=' resolved as shift.
Conflict in state 148 between rule 93 and token '?' resolved as shift.
Conflict in state 148 between rule 93 and token '&&' resolved as shift.
Conflict in state 148 between rule 93 and token '^^' resolved as shift.
Conflict in state 148 between rule 93 and token '/' resolved as shift.
Conflict in state 148 between rule 93 and token '+=' resolved as shift.
Conflict in state 148 between rule 93 and token '=' resolved as shift.
Conflict in state 148 between rule 93 and token '<=>' resolved as shift.
Conflict in state 152 between rule 94 and token '-' resolved as shift.
Conflict in state 152 between rule 94 and token 'conforms' resolved as shift.
Conflict in state 152 between rule 94 and token '*=' resolved as shift.
Conflict in state 152 between rule 94 and token '<' resolved as shift.
Conflict in state 152 between rule 94 and token '%' resolved as shift.
Conflict in state 152 between rule 94 and token '==' resolved as shift.
Conflict in state 152 between rule 94 and token '>=' resolved as shift.
Conflict in state 152 between rule 94 and token ' ' resolved as shift.
Conflict in state 152 between rule 94 and token '*' resolved as shift.
Conflict in state 152 between rule 94 and token '**=' resolved as shift.
Conflict in state 152 between rule 94 and token '||' resolved as shift.
Conflict in state 152 between rule 94 and token '->' resolved as shift.
Conflict in state 152 between rule 94 and token '-=' resolved as shift.
Conflict in state 152 between rule 94 and token '/=' resolved as shift.
Conflict in state 152 between rule 94 and token '<=' resolved as shift.
Conflict in state 152 between rule 94 and token '%=' resolved as shift.
Conflict in state 152 between rule 94 and token '>' resolved as shift.
Conflict in state 152 between rule 94 and token '^=' resolved as shift.
Conflict in state 152 between rule 94 and token '+' resolved as shift.
Conflict in state 152 between rule 94 and token '**' resolved as shift.
Conflict in state 152 between rule 94 and token '^' resolved as shift.
Conflict in state 152 between rule 94 and token 'per' resolved as shift.
Conflict in state 152 between rule 94 and token '!=' resolved as shift.
Conflict in state 152 between rule 94 and token '?' resolved as shift.
Conflict in state 152 between rule 94 and token '&&' resolved as shift.
Conflict in state 152 between rule 94 and token '^^' resolved as shift.
Conflict in state 152 between rule 94 and token '/' resolved as shift.
Conflict in state 152 between rule 94 and token '+=' resolved as shift.
Conflict in state 152 between rule 94 and token '=' resolved as shift.
Conflict in state 152 between rule 94 and token '<=>' resolved as shift.
Conflict in state 177 between rule 89 and token '-' resolved as shift.
Conflict in state 177 between rule 89 and token 'conforms' resolved as shift.
Conflict in state 177 between rule 89 and token '*=' resolved as reduce.
Conflict in state 177 between rule 89 and token '<' resolved as shift.
Conflict in state 177 between rule 89 and token '%' resolved as shift.
Conflict in state 177 between rule 89 and token '==' resolved as shift.
Conflict in state 177 between rule 89 and token '>=' resolved as shift.
Conflict in state 177 between rule 89 and token ' ' resolved as shift.
Conflict in state 177 between rule 89 and token '*' resolved as shift.
Conflict in state 177 between rule 89 and token '**=' resolved as reduce.
Conflict in state 177 between rule 89 and token '||' resolved as shift.
Conflict in state 177 between rule 89 and token '->' resolved as reduce.
Conflict in state 177 between rule 89 and token '-=' resolved as reduce.
Conflict in state 177 between rule 89 and token '/=' resolved as reduce.
Conflict in state 177 between rule 89 and token '<=' resolved as shift.
Conflict in state 177 between rule 89 and token '%=' resolved as reduce.
Conflict in state 177 between rule 89 and token '>' resolved as shift.
Conflict in state 177 between rule 89 and token '^=' resolved as reduce.
Conflict in state 177 between rule 89 and token '+' resolved as shift.
Conflict in state 177 between rule 89 and token '**' resolved as shift.
Conflict in state 177 between rule 89 and token '^' resolved as shift.
Conflict in state 177 between rule 89 and token 'per' resolved as shift.
Conflict in state 177 between rule 89 and token '!=' resolved as shift.
Conflict in state 177 between rule 89 and token '?' resolved as shift.
Conflict in state 177 between rule 89 and token '&&' resolved as shift.
Conflict in state 177 between rule 89 and token '^^' resolved as shift.
Conflict in state 177 between rule 89 and token '/' resolved as shift.
Conflict in state 177 between rule 89 and token '+=' resolved as reduce.
Conflict in state 177 between rule 89 and token '=' resolved as reduce.
Conflict in state 177 between rule 89 and token '<=>' resolved as shift.
Conflict in state 181 between rule 95 and token '-' resolved as shift.
Conflict in state 181 between rule 95 and token 'conforms' resolved as shift.
Conflict in state 181 between rule 95 and token '*=' resolved as shift.
Conflict in state 181 between rule 95 and token '<' resolved as shift.
Conflict in state 181 between rule 95 and token '%' resolved as shift.
Conflict in state 181 between rule 95 and token '==' resolved as shift.
Conflict in state 181 between rule 95 and token '>=' resolved as shift.
Conflict in state 181 between rule 95 and token ' ' resolved as shift.
Conflict in state 181 between rule 95 and token '*' resolved as shift.
Conflict in state 181 between rule 95 and token '**=' resolved as shift.
Conflict in state 181 between rule 95 and token '||' resolved as shift.
Conflict in state 181 between rule 95 and token '->' resolved as shift.
Conflict in state 181 between rule 95 and token '-=' resolved as shift.
Conflict in state 181 between rule 95 and token '/=' resolved as shift.
Conflict in state 181 between rule 95 and token '<=' resolved as shift.
Conflict in state 181 between rule 95 and token '%=' resolved as shift.
Conflict in state 181 between rule 95 and token '>' resolved as shift.
Conflict in state 181 between rule 95 and token '^=' resolved as shift.
Conflict in state 181 between rule 95 and token '+' resolved as shift.
Conflict in state 181 between rule 95 and token '**' resolved as shift.
Conflict in state 181 between rule 95 and token '^' resolved as shift.
Conflict in state 181 between rule 95 and token 'per' resolved as shift.
Conflict in state 181 between rule 95 and token '!=' resolved as shift.
Conflict in state 181 between rule 95 and token '?' resolved as shift.
Conflict in state 181 between rule 95 and token '&&' resolved as shift.
Conflict in state 181 between rule 95 and token '^^' resolved as shift.
Conflict in state 181 between rule 95 and token '/' resolved as shift.
Conflict in state 181 between rule 95 and token '+=' resolved as shift.
Conflict in state 181 between rule 95 and token '=' resolved as shift.
Conflict in state 181 between rule 95 and token '<=>' resolved as shift.

Rules:
------
0:	$start -> stma $end
1:	stma -> /* empty */
2:	stma -> stmt
3:	stma -> stmt ';' stma
4:	stmt -> expr
5:	stmt -> 'var' NAME
6:	stmt -> 'var' NAME '=' expr
7:	stmt -> NAME ':=' expr
8:	stmt -> expr ':->' expr
9:	stmt -> NAME '=!=' NAME
10:	stmt -> expr '|||' NAME
11:	stmt -> if
12:	stmt -> while
13:	ifstartcond -> 'if' '(' expr ')'
14:	ifstmts -> '{' stma '}'
15:	if -> ifstartcond ifstmts
16:	if -> ifstartcond ifstmts 'else' ifstmts
17:	while -> 'while' '(' expr ')' '{' stma '}'
18:	array -> expr ',' array
19:	array -> expr
20:	array -> /* empty */
21:	array -> ',' array
22:	constraint -> expr
23:	constraint -> '...'
24:	argelement -> NAME '=' expr 'isa' constraint
25:	argelement -> NAME 'isa' constraint
26:	argelement -> NAME '=' expr
27:	argelement -> NAME
28:	argelement -> NAME 'byref' 'isa' constraint
29:	argelement -> NAME 'byref'
30:	arglistfilled -> argelement ',' arglistfilled
31:	arglistfilled -> argelement
32:	arglist -> arglistfilled
33:	arglist -> /* empty */
34:	number -> NUMBER
35:	number -> HEXNUMBER
36:	value -> number
37:	value -> DATE
38:	value -> STRING
39:	value -> singleval '@' array '$'
40:	value -> NAME
41:	value -> '[' array ']'
42:	value -> lambda
43:	parens -> '(' expr ')'
44:	singleval -> value
45:	singleval -> parens
46:	assignexpr -> expr '=' expr
47:	assignexpr2 -> expr '+=' expr
48:	assignexpr2 -> expr '-=' expr
49:	assignexpr2 -> expr '/=' expr
50:	assignexpr2 -> expr '*=' expr
51:	assignexpr2 -> expr '%=' expr
52:	assignexpr2 -> expr '**=' expr
53:	assignexpr2 -> expr '^=' expr
54:	assigncomb -> assignexpr
55:	assigncomb -> assignexpr2
56:	lambda -> '{`' arglist '`' stma '}'
57:	lambda -> '{|' arglist '|' stma '}'
58:	multexpr -> expr '*' expr
59:	multexpr -> singleval singleval
60:	multexpr -> singleval singleval expr
61:	multexpr -> expr ' ' expr
62:	logic -> expr '&&' expr
63:	logic -> expr '||' expr
64:	logic -> expr '^^' expr
65:	logic -> '!' singleval
66:	compare -> expr '<' expr
67:	compare -> expr '>' expr
68:	compare -> expr '<=' expr
69:	compare -> expr '>=' expr
70:	compare -> expr '==' expr
71:	compare -> expr '<=>' expr
72:	compare -> expr '!=' expr
73:	crement -> '++' singleval
74:	crement -> '--' singleval
75:	crement -> singleval '++'
76:	crement -> singleval '--'
77:	powexp -> expr '**' expr
78:	powexp -> expr '^' expr
79:	standardmath -> expr '+' expr
80:	standardmath -> expr '-' expr
81:	standardmath -> expr '/' expr
82:	standardmath -> expr 'per' expr
83:	standardmath -> expr '%' expr
84:	exprnouminus -> singleval
85:	exprnouminus -> multexpr
86:	exprnouminus -> powexp
87:	exprnouminus -> standardmath
88:	exprnouminus -> expr 'conforms' expr
89:	exprnouminus -> expr '?' expr ':' expr
90:	exprnouminus -> logic
91:	exprnouminus -> compare
92:	exprnouminus -> crement
93:	exprnouminus -> NAME '::-' expr
94:	exprnouminus -> NAME ':-' expr
95:	exprnouminus -> NAME '{' arglist '}' ':=' expr
96:	exprnouminus -> NAME '{' arglist '}' ':=' '{' stma '}'
97:	exprnouminus -> expr '->' expr
98:	exprnouminus -> assigncomb
99:	expr -> exprnouminus
100:	expr -> '-' expr

States:
-------
State 0:

	$start -> . stma $end	(Rule 0)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'if'	shift, and go to state 25
	'var'	shift, and go to state 31
	'while'	shift, and go to state 33
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 29
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 21
	lambda	go to state 23
	number	go to state 22
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 27
	multexpr	go to state 9
	stma	go to state 13
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	ifstartcond	go to state 16
	stmt	go to state 35
	exprnouminus	go to state 34
	assigncomb	go to state 17
	while	go to state 36
	assignexpr2	go to state 37
	logic	go to state 20

State 1:

	expr -> '-' . expr	(Rule 100)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 38
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 2:

	exprnouminus -> compare .	(Rule 91)

	$default	reduce using rule 91 (exprnouminus)

State 3:

	value -> DATE .	(Rule 37)

	$default	reduce using rule 37 (value)

State 4:

	exprnouminus -> crement .	(Rule 92)

	$default	reduce using rule 92 (exprnouminus)

State 5:

	assigncomb -> assignexpr .	(Rule 54)

	$default	reduce using rule 54 (assigncomb)

State 6:

	stmt -> if .	(Rule 11)

	$default	reduce using rule 11 (stmt)

State 7:

	singleval -> parens .	(Rule 45)

	$default	reduce using rule 45 (singleval)

State 8:

	logic -> '!' . singleval	(Rule 65)

	'('	shift, and go to state 18
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 41
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	parens	go to state 7
	singleval	go to state 40
	number	go to state 22
	lambda	go to state 23
	value	go to state 15

State 9:

	exprnouminus -> multexpr .	(Rule 85)

	$default	reduce using rule 85 (exprnouminus)

State 10:

	value -> '[' . array ']'	(Rule 41)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	','	shift, and go to state 42
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 20 (array)

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	assignexpr	go to state 5
	array	go to state 43
	parens	go to state 7
	expr	go to state 44
	multexpr	go to state 9
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	assigncomb	go to state 17
	exprnouminus	go to state 34
	assignexpr2	go to state 37
	logic	go to state 20

State 11:

	crement -> '--' . singleval	(Rule 74)

	'('	shift, and go to state 18
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 41
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	parens	go to state 7
	singleval	go to state 45
	number	go to state 22
	lambda	go to state 23
	value	go to state 15

State 12:

	lambda -> '{`' . arglist '`' stma '}'	(Rule 56)

	NAME	shift, and go to state 48

	$default	reduce using rule 33 (arglist)

	arglist	go to state 49
	argelement	go to state 46
	arglistfilled	go to state 47

State 13:

	$start -> stma . $end	(Rule 0)

	$end	shift, and go to state 50

State 14:

	lambda -> '{|' . arglist '|' stma '}'	(Rule 57)

	NAME	shift, and go to state 48

	$default	reduce using rule 33 (arglist)

	arglist	go to state 51
	argelement	go to state 46
	arglistfilled	go to state 47

State 15:

	singleval -> value .	(Rule 44)

	$default	reduce using rule 44 (singleval)

State 16:

	if -> ifstartcond . ifstmts	(Rule 15)
	if -> ifstartcond . ifstmts 'else' ifstmts	(Rule 16)

	'{'	shift, and go to state 53

	ifstmts	go to state 52

State 17:

	exprnouminus -> assigncomb .	(Rule 98)

	$default	reduce using rule 98 (exprnouminus)

State 18:

	parens -> '(' . expr ')'	(Rule 43)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 54
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 19:

	number -> HEXNUMBER .	(Rule 35)

	$default	reduce using rule 35 (number)

State 20:

	exprnouminus -> logic .	(Rule 90)

	$default	reduce using rule 90 (exprnouminus)

State 21:

	value -> singleval . '@' array '$'	(Rule 39)
	multexpr -> singleval . singleval	(Rule 59)
	multexpr -> singleval . singleval expr	(Rule 60)
	crement -> singleval . '++'	(Rule 75)
	crement -> singleval . '--'	(Rule 76)
	exprnouminus -> singleval .	(Rule 84)

	'('	shift, and go to state 18
	'++'	shift, and go to state 58
	'--'	shift, and go to state 56
	'@'	shift, and go to state 55
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 41
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 84 (exprnouminus)

	parens	go to state 7
	singleval	go to state 57
	number	go to state 22
	lambda	go to state 23
	value	go to state 15

State 22:

	value -> number .	(Rule 36)

	$default	reduce using rule 36 (value)

State 23:

	value -> lambda .	(Rule 42)

	$default	reduce using rule 42 (value)

State 24:

	value -> STRING .	(Rule 38)

	$default	reduce using rule 38 (value)

State 25:

	ifstartcond -> 'if' . '(' expr ')'	(Rule 13)

	'('	shift, and go to state 59

State 26:

	crement -> '++' . singleval	(Rule 73)

	'('	shift, and go to state 18
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 41
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	parens	go to state 7
	singleval	go to state 60
	number	go to state 22
	lambda	go to state 23
	value	go to state 15

State 27:

	stmt -> expr .	(Rule 4)
	stmt -> expr . ':->' expr	(Rule 8)
	stmt -> expr . '|||' NAME	(Rule 10)
	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	':->'	shift, and go to state 84
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72
	'|||'	shift, and go to state 71

	$default	reduce using rule 4 (stmt)

State 28:

	number -> NUMBER .	(Rule 34)

	$default	reduce using rule 34 (number)

State 29:

	stmt -> NAME . ':=' expr	(Rule 7)
	stmt -> NAME . '=!=' NAME	(Rule 9)
	value -> NAME .	(Rule 40)
	exprnouminus -> NAME . '::-' expr	(Rule 93)
	exprnouminus -> NAME . ':-' expr	(Rule 94)
	exprnouminus -> NAME . '{' arglist '}' ':=' expr	(Rule 95)
	exprnouminus -> NAME . '{' arglist '}' ':=' '{' stma '}'	(Rule 96)

	':-'	shift, and go to state 97
	'::-'	shift, and go to state 93
	':='	shift, and go to state 94
	'=!='	shift, and go to state 96
	'{'	shift, and go to state 95

	$default	reduce using rule 40 (value)

State 30:

	exprnouminus -> powexp .	(Rule 86)

	$default	reduce using rule 86 (exprnouminus)

State 31:

	stmt -> 'var' . NAME	(Rule 5)
	stmt -> 'var' . NAME '=' expr	(Rule 6)

	NAME	shift, and go to state 98

State 32:

	exprnouminus -> standardmath .	(Rule 87)

	$default	reduce using rule 87 (exprnouminus)

State 33:

	while -> 'while' . '(' expr ')' '{' stma '}'	(Rule 17)

	'('	shift, and go to state 99

State 34:

	expr -> exprnouminus .	(Rule 99)

	$default	reduce using rule 99 (expr)

State 35:

	stma -> stmt .	(Rule 2)
	stma -> stmt . ';' stma	(Rule 3)

	';'	shift, and go to state 100

	$default	reduce using rule 2 (stma)

State 36:

	stmt -> while .	(Rule 12)

	$default	reduce using rule 12 (stmt)

State 37:

	assigncomb -> assignexpr2 .	(Rule 55)

	$default	reduce using rule 55 (assigncomb)

State 38:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)
	expr -> '-' expr .	(Rule 100)

	'**'	shift, and go to state 81
	'^'	shift, and go to state 82

	$default	reduce using rule 100 (expr)

State 39:

	value -> NAME .	(Rule 40)
	exprnouminus -> NAME . '::-' expr	(Rule 93)
	exprnouminus -> NAME . ':-' expr	(Rule 94)
	exprnouminus -> NAME . '{' arglist '}' ':=' expr	(Rule 95)
	exprnouminus -> NAME . '{' arglist '}' ':=' '{' stma '}'	(Rule 96)

	':-'	shift, and go to state 97
	'::-'	shift, and go to state 93
	'{'	shift, and go to state 95

	$default	reduce using rule 40 (value)

State 40:

	value -> singleval . '@' array '$'	(Rule 39)
	logic -> '!' singleval .	(Rule 65)

	'@'	shift, and go to state 55

	$default	reduce using rule 65 (logic)

State 41:

	value -> NAME .	(Rule 40)

	$default	reduce using rule 40 (value)

State 42:

	array -> ',' . array	(Rule 21)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	','	shift, and go to state 42
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 20 (array)

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	assignexpr	go to state 5
	array	go to state 101
	parens	go to state 7
	expr	go to state 44
	multexpr	go to state 9
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	assigncomb	go to state 17
	exprnouminus	go to state 34
	assignexpr2	go to state 37
	logic	go to state 20

State 43:

	value -> '[' array . ']'	(Rule 41)

	']'	shift, and go to state 102

State 44:

	array -> expr . ',' array	(Rule 18)
	array -> expr .	(Rule 19)
	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	','	shift, and go to state 103
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 19 (array)

State 45:

	value -> singleval . '@' array '$'	(Rule 39)
	crement -> '--' singleval .	(Rule 74)

	'@'	shift, and go to state 55

	$default	reduce using rule 74 (crement)

State 46:

	arglistfilled -> argelement . ',' arglistfilled	(Rule 30)
	arglistfilled -> argelement .	(Rule 31)

	','	shift, and go to state 104

	$default	reduce using rule 31 (arglistfilled)

State 47:

	arglist -> arglistfilled .	(Rule 32)

	$default	reduce using rule 32 (arglist)

State 48:

	argelement -> NAME . '=' expr 'isa' constraint	(Rule 24)
	argelement -> NAME . 'isa' constraint	(Rule 25)
	argelement -> NAME . '=' expr	(Rule 26)
	argelement -> NAME .	(Rule 27)
	argelement -> NAME . 'byref' 'isa' constraint	(Rule 28)
	argelement -> NAME . 'byref'	(Rule 29)

	'='	shift, and go to state 107
	'byref'	shift, and go to state 105
	'isa'	shift, and go to state 106

	$default	reduce using rule 27 (argelement)

State 49:

	lambda -> '{`' arglist . '`' stma '}'	(Rule 56)

	'`'	shift, and go to state 108

State 50:

	$start -> stma $end .	(Rule 0)

	$default	accept

State 51:

	lambda -> '{|' arglist . '|' stma '}'	(Rule 57)

	'|'	shift, and go to state 109

State 52:

	if -> ifstartcond ifstmts .	(Rule 15)
	if -> ifstartcond ifstmts . 'else' ifstmts	(Rule 16)

	'else'	shift, and go to state 110

	$default	reduce using rule 15 (if)

State 53:

	ifstmts -> '{' . stma '}'	(Rule 14)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'if'	shift, and go to state 25
	'var'	shift, and go to state 31
	'while'	shift, and go to state 33
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 29
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 27
	multexpr	go to state 9
	stma	go to state 111
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	ifstartcond	go to state 16
	stmt	go to state 35
	exprnouminus	go to state 34
	assigncomb	go to state 17
	while	go to state 36
	assignexpr2	go to state 37
	logic	go to state 20

State 54:

	parens -> '(' expr . ')'	(Rule 43)
	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	')'	shift, and go to state 112
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

State 55:

	value -> singleval '@' . array '$'	(Rule 39)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	','	shift, and go to state 42
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 20 (array)

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	assignexpr	go to state 5
	array	go to state 113
	parens	go to state 7
	expr	go to state 44
	multexpr	go to state 9
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	assigncomb	go to state 17
	exprnouminus	go to state 34
	assignexpr2	go to state 37
	logic	go to state 20

State 56:

	crement -> singleval '--' .	(Rule 76)

	$default	reduce using rule 76 (crement)

State 57:

	value -> singleval . '@' array '$'	(Rule 39)
	multexpr -> singleval singleval .	(Rule 59)
	multexpr -> singleval singleval . expr	(Rule 60)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'--'	shift, and go to state 11
	'@'	shift, and go to state 55
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 59 (multexpr)

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 114
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 58:

	crement -> singleval '++' .	(Rule 75)

	$default	reduce using rule 75 (crement)

State 59:

	ifstartcond -> 'if' '(' . expr ')'	(Rule 13)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 115
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 60:

	value -> singleval . '@' array '$'	(Rule 39)
	crement -> '++' singleval .	(Rule 73)

	'@'	shift, and go to state 55

	$default	reduce using rule 73 (crement)

State 61:

	standardmath -> expr '-' . expr	(Rule 80)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 116
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 62:

	exprnouminus -> expr 'conforms' . expr	(Rule 88)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 117
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 63:

	compare -> expr '<' . expr	(Rule 66)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 118
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 64:

	assignexpr2 -> expr '*=' . expr	(Rule 50)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 119
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 65:

	standardmath -> expr '%' . expr	(Rule 83)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 120
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 66:

	compare -> expr '==' . expr	(Rule 70)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 121
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 67:

	compare -> expr '>=' . expr	(Rule 69)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 122
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 68:

	multexpr -> expr ' ' . expr	(Rule 61)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 123
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 69:

	multexpr -> expr '*' . expr	(Rule 58)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 124
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 70:

	assignexpr2 -> expr '**=' . expr	(Rule 52)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 125
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 71:

	stmt -> expr '|||' . NAME	(Rule 10)

	NAME	shift, and go to state 126

State 72:

	logic -> expr '||' . expr	(Rule 63)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 127
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 73:

	exprnouminus -> expr '->' . expr	(Rule 97)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 128
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 74:

	assignexpr2 -> expr '-=' . expr	(Rule 48)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 129
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 75:

	assignexpr2 -> expr '/=' . expr	(Rule 49)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 130
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 76:

	compare -> expr '<=' . expr	(Rule 68)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 131
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 77:

	compare -> expr '>' . expr	(Rule 67)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 132
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 78:

	assignexpr2 -> expr '%=' . expr	(Rule 51)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 133
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 79:

	assignexpr2 -> expr '^=' . expr	(Rule 53)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 134
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 80:

	standardmath -> expr '+' . expr	(Rule 79)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 135
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 81:

	powexp -> expr '**' . expr	(Rule 77)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 136
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 82:

	powexp -> expr '^' . expr	(Rule 78)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 137
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 83:

	standardmath -> expr 'per' . expr	(Rule 82)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 138
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 84:

	stmt -> expr ':->' . expr	(Rule 8)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 139
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 85:

	compare -> expr '!=' . expr	(Rule 72)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 140
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 86:

	exprnouminus -> expr '?' . expr ':' expr	(Rule 89)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 141
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 87:

	logic -> expr '&&' . expr	(Rule 62)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 142
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 88:

	logic -> expr '^^' . expr	(Rule 64)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 143
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 89:

	standardmath -> expr '/' . expr	(Rule 81)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 144
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 90:

	assignexpr2 -> expr '+=' . expr	(Rule 47)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 145
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 91:

	assignexpr -> expr '=' . expr	(Rule 46)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 146
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 92:

	compare -> expr '<=>' . expr	(Rule 71)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 147
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 93:

	exprnouminus -> NAME '::-' . expr	(Rule 93)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 148
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 94:

	stmt -> NAME ':=' . expr	(Rule 7)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 149
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 95:

	exprnouminus -> NAME '{' . arglist '}' ':=' expr	(Rule 95)
	exprnouminus -> NAME '{' . arglist '}' ':=' '{' stma '}'	(Rule 96)

	NAME	shift, and go to state 48

	$default	reduce using rule 33 (arglist)

	arglist	go to state 150
	argelement	go to state 46
	arglistfilled	go to state 47

State 96:

	stmt -> NAME '=!=' . NAME	(Rule 9)

	NAME	shift, and go to state 151

State 97:

	exprnouminus -> NAME ':-' . expr	(Rule 94)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 152
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 98:

	stmt -> 'var' NAME .	(Rule 5)
	stmt -> 'var' NAME . '=' expr	(Rule 6)

	'='	shift, and go to state 153

	$default	reduce using rule 5 (stmt)

State 99:

	while -> 'while' '(' . expr ')' '{' stma '}'	(Rule 17)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 154
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 100:

	stma -> stmt ';' . stma	(Rule 3)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'if'	shift, and go to state 25
	'var'	shift, and go to state 31
	'while'	shift, and go to state 33
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 29
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 27
	multexpr	go to state 9
	stma	go to state 155
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	ifstartcond	go to state 16
	stmt	go to state 35
	exprnouminus	go to state 34
	assigncomb	go to state 17
	while	go to state 36
	assignexpr2	go to state 37
	logic	go to state 20

State 101:

	array -> ',' array .	(Rule 21)

	$default	reduce using rule 21 (array)

State 102:

	value -> '[' array ']' .	(Rule 41)

	$default	reduce using rule 41 (value)

State 103:

	array -> expr ',' . array	(Rule 18)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	','	shift, and go to state 42
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 20 (array)

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	assignexpr	go to state 5
	array	go to state 156
	parens	go to state 7
	expr	go to state 44
	multexpr	go to state 9
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	assigncomb	go to state 17
	exprnouminus	go to state 34
	assignexpr2	go to state 37
	logic	go to state 20

State 104:

	arglistfilled -> argelement ',' . arglistfilled	(Rule 30)

	NAME	shift, and go to state 48

	argelement	go to state 46
	arglistfilled	go to state 157

State 105:

	argelement -> NAME 'byref' . 'isa' constraint	(Rule 28)
	argelement -> NAME 'byref' .	(Rule 29)

	'isa'	shift, and go to state 158

	$default	reduce using rule 29 (argelement)

State 106:

	argelement -> NAME 'isa' . constraint	(Rule 25)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'...'	shift, and go to state 161
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 160
	multexpr	go to state 9
	constraint	go to state 159
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	assigncomb	go to state 17
	exprnouminus	go to state 34
	assignexpr2	go to state 37
	logic	go to state 20

State 107:

	argelement -> NAME '=' . expr 'isa' constraint	(Rule 24)
	argelement -> NAME '=' . expr	(Rule 26)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 162
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 108:

	lambda -> '{`' arglist '`' . stma '}'	(Rule 56)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'if'	shift, and go to state 25
	'var'	shift, and go to state 31
	'while'	shift, and go to state 33
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 29
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 27
	multexpr	go to state 9
	stma	go to state 163
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	ifstartcond	go to state 16
	stmt	go to state 35
	exprnouminus	go to state 34
	assigncomb	go to state 17
	while	go to state 36
	assignexpr2	go to state 37
	logic	go to state 20

State 109:

	lambda -> '{|' arglist '|' . stma '}'	(Rule 57)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'if'	shift, and go to state 25
	'var'	shift, and go to state 31
	'while'	shift, and go to state 33
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 29
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 27
	multexpr	go to state 9
	stma	go to state 164
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	ifstartcond	go to state 16
	stmt	go to state 35
	exprnouminus	go to state 34
	assigncomb	go to state 17
	while	go to state 36
	assignexpr2	go to state 37
	logic	go to state 20

State 110:

	if -> ifstartcond ifstmts 'else' . ifstmts	(Rule 16)

	'{'	shift, and go to state 53

	ifstmts	go to state 165

State 111:

	ifstmts -> '{' stma . '}'	(Rule 14)

	'}'	shift, and go to state 166

State 112:

	parens -> '(' expr ')' .	(Rule 43)

	$default	reduce using rule 43 (parens)

State 113:

	value -> singleval '@' array . '$'	(Rule 39)

	'$'	shift, and go to state 167

State 114:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> singleval singleval expr .	(Rule 60)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	'**'	shift, and go to state 81
	'^'	shift, and go to state 82

	$default	reduce using rule 60 (multexpr)

State 115:

	ifstartcond -> 'if' '(' expr . ')'	(Rule 13)
	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	')'	shift, and go to state 168
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

State 116:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr '-' expr .	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'/'	shift, and go to state 89
	'^'	shift, and go to state 82
	'per'	shift, and go to state 83

	$default	reduce using rule 80 (standardmath)

State 117:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr 'conforms' expr .	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'^'	shift, and go to state 82
	'per'	shift, and go to state 83

	$default	reduce using rule 88 (exprnouminus)

State 118:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr '<' expr .	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'^'	shift, and go to state 82
	'per'	shift, and go to state 83

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 66 (compare)

State 119:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr '*=' expr .	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 50 (assignexpr2)

State 120:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	standardmath -> expr '%' expr .	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	'**'	shift, and go to state 81
	'^'	shift, and go to state 82

	$default	reduce using rule 83 (standardmath)

State 121:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr '==' expr .	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'^'	shift, and go to state 82
	'per'	shift, and go to state 83

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 70 (compare)

State 122:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr '>=' expr .	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'^'	shift, and go to state 82
	'per'	shift, and go to state 83

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 69 (compare)

State 123:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	multexpr -> expr ' ' expr .	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	'**'	shift, and go to state 81
	'^'	shift, and go to state 82

	$default	reduce using rule 61 (multexpr)

State 124:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr '*' expr .	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	'**'	shift, and go to state 81
	'^'	shift, and go to state 82

	$default	reduce using rule 58 (multexpr)

State 125:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr '**=' expr .	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 52 (assignexpr2)

State 126:

	stmt -> expr '|||' NAME .	(Rule 10)

	$default	reduce using rule 10 (stmt)

State 127:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr '||' expr .	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'^'	shift, and go to state 82
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83

	$default	reduce using rule 63 (logic)

State 128:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)
	exprnouminus -> expr '->' expr .	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 97 (exprnouminus)

State 129:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr '-=' expr .	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 48 (assignexpr2)

State 130:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr '/=' expr .	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 49 (assignexpr2)

State 131:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr '<=' expr .	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'^'	shift, and go to state 82
	'per'	shift, and go to state 83

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 68 (compare)

State 132:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr '>' expr .	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'^'	shift, and go to state 82
	'per'	shift, and go to state 83

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 67 (compare)

State 133:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr '%=' expr .	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 51 (assignexpr2)

State 134:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	assignexpr2 -> expr '^=' expr .	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 53 (assignexpr2)

State 135:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr '+' expr .	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'/'	shift, and go to state 89
	'^'	shift, and go to state 82
	'per'	shift, and go to state 83

	$default	reduce using rule 79 (standardmath)

State 136:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr '**' expr .	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	'**'	shift, and go to state 81
	'^'	shift, and go to state 82

	$default	reduce using rule 77 (powexp)

State 137:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	powexp -> expr '^' expr .	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	'**'	shift, and go to state 81
	'^'	shift, and go to state 82

	$default	reduce using rule 78 (powexp)

State 138:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr 'per' expr .	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'/'	shift, and go to state 89
	'^'	shift, and go to state 82

	$default	reduce using rule 82 (standardmath)

State 139:

	stmt -> expr ':->' expr .	(Rule 8)
	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 8 (stmt)

State 140:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	compare -> expr '!=' expr .	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'^'	shift, and go to state 82
	'per'	shift, and go to state 83

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 72 (compare)

State 141:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr '?' expr . ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	':'	shift, and go to state 169
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

State 142:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr '&&' expr .	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'^'	shift, and go to state 82
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83

	$default	reduce using rule 62 (logic)

State 143:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	logic -> expr '^^' expr .	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'^'	shift, and go to state 82
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83

	$default	reduce using rule 64 (logic)

State 144:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr '/' expr .	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	'**'	shift, and go to state 81
	'^'	shift, and go to state 82

	$default	reduce using rule 81 (standardmath)

State 145:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr '+=' expr .	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 47 (assignexpr2)

State 146:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr -> expr '=' expr .	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 46 (assignexpr)

State 147:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr '<=>' expr .	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'%'	shift, and go to state 65
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'^'	shift, and go to state 82
	'per'	shift, and go to state 83

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 71 (compare)

State 148:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> NAME '::-' expr .	(Rule 93)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 93 (exprnouminus)

State 149:

	stmt -> NAME ':=' expr .	(Rule 7)
	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 7 (stmt)

State 150:

	exprnouminus -> NAME '{' arglist . '}' ':=' expr	(Rule 95)
	exprnouminus -> NAME '{' arglist . '}' ':=' '{' stma '}'	(Rule 96)

	'}'	shift, and go to state 170

State 151:

	stmt -> NAME '=!=' NAME .	(Rule 9)

	$default	reduce using rule 9 (stmt)

State 152:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> NAME ':-' expr .	(Rule 94)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 94 (exprnouminus)

State 153:

	stmt -> 'var' NAME '=' . expr	(Rule 6)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 171
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 154:

	while -> 'while' '(' expr . ')' '{' stma '}'	(Rule 17)
	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	')'	shift, and go to state 172
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

State 155:

	stma -> stmt ';' stma .	(Rule 3)

	$default	reduce using rule 3 (stma)

State 156:

	array -> expr ',' array .	(Rule 18)

	$default	reduce using rule 18 (array)

State 157:

	arglistfilled -> argelement ',' arglistfilled .	(Rule 30)

	$default	reduce using rule 30 (arglistfilled)

State 158:

	argelement -> NAME 'byref' 'isa' . constraint	(Rule 28)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'...'	shift, and go to state 161
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 160
	multexpr	go to state 9
	constraint	go to state 173
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	assigncomb	go to state 17
	exprnouminus	go to state 34
	assignexpr2	go to state 37
	logic	go to state 20

State 159:

	argelement -> NAME 'isa' constraint .	(Rule 25)

	$default	reduce using rule 25 (argelement)

State 160:

	constraint -> expr .	(Rule 22)
	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 22 (constraint)

State 161:

	constraint -> '...' .	(Rule 23)

	$default	reduce using rule 23 (constraint)

State 162:

	argelement -> NAME '=' expr . 'isa' constraint	(Rule 24)
	argelement -> NAME '=' expr .	(Rule 26)
	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'isa'	shift, and go to state 174
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 26 (argelement)

State 163:

	lambda -> '{`' arglist '`' stma . '}'	(Rule 56)

	'}'	shift, and go to state 175

State 164:

	lambda -> '{|' arglist '|' stma . '}'	(Rule 57)

	'}'	shift, and go to state 176

State 165:

	if -> ifstartcond ifstmts 'else' ifstmts .	(Rule 16)

	$default	reduce using rule 16 (if)

State 166:

	ifstmts -> '{' stma '}' .	(Rule 14)

	$default	reduce using rule 14 (ifstmts)

State 167:

	value -> singleval '@' array '$' .	(Rule 39)

	$default	reduce using rule 39 (value)

State 168:

	ifstartcond -> 'if' '(' expr ')' .	(Rule 13)

	$default	reduce using rule 13 (ifstartcond)

State 169:

	exprnouminus -> expr '?' expr ':' . expr	(Rule 89)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 177
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 170:

	exprnouminus -> NAME '{' arglist '}' . ':=' expr	(Rule 95)
	exprnouminus -> NAME '{' arglist '}' . ':=' '{' stma '}'	(Rule 96)

	':='	shift, and go to state 178

State 171:

	stmt -> 'var' NAME '=' expr .	(Rule 6)
	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 6 (stmt)

State 172:

	while -> 'while' '(' expr ')' . '{' stma '}'	(Rule 17)

	'{'	shift, and go to state 179

State 173:

	argelement -> NAME 'byref' 'isa' constraint .	(Rule 28)

	$default	reduce using rule 28 (argelement)

State 174:

	argelement -> NAME '=' expr 'isa' . constraint	(Rule 24)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'...'	shift, and go to state 161
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 160
	multexpr	go to state 9
	constraint	go to state 180
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	assigncomb	go to state 17
	exprnouminus	go to state 34
	assignexpr2	go to state 37
	logic	go to state 20

State 175:

	lambda -> '{`' arglist '`' stma '}' .	(Rule 56)

	$default	reduce using rule 56 (lambda)

State 176:

	lambda -> '{|' arglist '|' stma '}' .	(Rule 57)

	$default	reduce using rule 57 (lambda)

State 177:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> expr '?' expr ':' expr .	(Rule 89)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'+'	shift, and go to state 80
	'-'	shift, and go to state 61
	'/'	shift, and go to state 89
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 89 (exprnouminus)

State 178:

	exprnouminus -> NAME '{' arglist '}' ':=' . expr	(Rule 95)
	exprnouminus -> NAME '{' arglist '}' ':=' . '{' stma '}'	(Rule 96)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{'	shift, and go to state 182
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 39
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	compare	go to state 2
	singleval	go to state 21
	powexp	go to state 30
	number	go to state 22
	lambda	go to state 23
	value	go to state 15
	standardmath	go to state 32
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 34
	parens	go to state 7
	assigncomb	go to state 17
	expr	go to state 181
	assignexpr2	go to state 37
	multexpr	go to state 9
	logic	go to state 20

State 179:

	while -> 'while' '(' expr ')' '{' . stma '}'	(Rule 17)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'if'	shift, and go to state 25
	'var'	shift, and go to state 31
	'while'	shift, and go to state 33
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 29
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 27
	multexpr	go to state 9
	stma	go to state 183
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	ifstartcond	go to state 16
	stmt	go to state 35
	exprnouminus	go to state 34
	assigncomb	go to state 17
	while	go to state 36
	assignexpr2	go to state 37
	logic	go to state 20

State 180:

	argelement -> NAME '=' expr 'isa' constraint .	(Rule 24)

	$default	reduce using rule 24 (argelement)

State 181:

	assignexpr -> expr . '=' expr	(Rule 46)
	assignexpr2 -> expr . '+=' expr	(Rule 47)
	assignexpr2 -> expr . '-=' expr	(Rule 48)
	assignexpr2 -> expr . '/=' expr	(Rule 49)
	assignexpr2 -> expr . '*=' expr	(Rule 50)
	assignexpr2 -> expr . '%=' expr	(Rule 51)
	assignexpr2 -> expr . '**=' expr	(Rule 52)
	assignexpr2 -> expr . '^=' expr	(Rule 53)
	multexpr -> expr . '*' expr	(Rule 58)
	multexpr -> expr . ' ' expr	(Rule 61)
	logic -> expr . '&&' expr	(Rule 62)
	logic -> expr . '||' expr	(Rule 63)
	logic -> expr . '^^' expr	(Rule 64)
	compare -> expr . '<' expr	(Rule 66)
	compare -> expr . '>' expr	(Rule 67)
	compare -> expr . '<=' expr	(Rule 68)
	compare -> expr . '>=' expr	(Rule 69)
	compare -> expr . '==' expr	(Rule 70)
	compare -> expr . '<=>' expr	(Rule 71)
	compare -> expr . '!=' expr	(Rule 72)
	powexp -> expr . '**' expr	(Rule 77)
	powexp -> expr . '^' expr	(Rule 78)
	standardmath -> expr . '+' expr	(Rule 79)
	standardmath -> expr . '-' expr	(Rule 80)
	standardmath -> expr . '/' expr	(Rule 81)
	standardmath -> expr . 'per' expr	(Rule 82)
	standardmath -> expr . '%' expr	(Rule 83)
	exprnouminus -> expr . 'conforms' expr	(Rule 88)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 89)
	exprnouminus -> NAME '{' arglist '}' ':=' expr .	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 97)

	' '	shift, and go to state 68
	'!='	shift, and go to state 85
	'%'	shift, and go to state 65
	'%='	shift, and go to state 78
	'&&'	shift, and go to state 87
	'*'	shift, and go to state 69
	'**'	shift, and go to state 81
	'**='	shift, and go to state 70
	'*='	shift, and go to state 64
	'+'	shift, and go to state 80
	'+='	shift, and go to state 90
	'-'	shift, and go to state 61
	'-='	shift, and go to state 74
	'->'	shift, and go to state 73
	'/'	shift, and go to state 89
	'/='	shift, and go to state 75
	'<'	shift, and go to state 63
	'<='	shift, and go to state 76
	'<=>'	shift, and go to state 92
	'='	shift, and go to state 91
	'=='	shift, and go to state 66
	'>'	shift, and go to state 77
	'>='	shift, and go to state 67
	'?'	shift, and go to state 86
	'^'	shift, and go to state 82
	'^='	shift, and go to state 79
	'^^'	shift, and go to state 88
	'conforms'	shift, and go to state 62
	'per'	shift, and go to state 83
	'||'	shift, and go to state 72

	$default	reduce using rule 95 (exprnouminus)

State 182:

	exprnouminus -> NAME '{' arglist '}' ':=' '{' . stma '}'	(Rule 96)

	'!'	shift, and go to state 8
	'('	shift, and go to state 18
	'++'	shift, and go to state 26
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'if'	shift, and go to state 25
	'var'	shift, and go to state 31
	'while'	shift, and go to state 33
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 19
	NAME	shift, and go to state 29
	NUMBER	shift, and go to state 28
	STRING	shift, and go to state 24

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 21
	number	go to state 22
	lambda	go to state 23
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 27
	multexpr	go to state 9
	stma	go to state 184
	powexp	go to state 30
	value	go to state 15
	standardmath	go to state 32
	ifstartcond	go to state 16
	stmt	go to state 35
	exprnouminus	go to state 34
	assigncomb	go to state 17
	while	go to state 36
	assignexpr2	go to state 37
	logic	go to state 20

State 183:

	while -> 'while' '(' expr ')' '{' stma . '}'	(Rule 17)

	'}'	shift, and go to state 185

State 184:

	exprnouminus -> NAME '{' arglist '}' ':=' '{' stma . '}'	(Rule 96)

	'}'	shift, and go to state 186

State 185:

	while -> 'while' '(' expr ')' '{' stma '}' .	(Rule 17)

	$default	reduce using rule 17 (while)

State 186:

	exprnouminus -> NAME '{' arglist '}' ':=' '{' stma '}' .	(Rule 96)

	$default	reduce using rule 96 (exprnouminus)


Summary:
--------
Number of rules         : 101
Number of terminals     : 70
Number of non-terminals : 28
Number of states        : 187
